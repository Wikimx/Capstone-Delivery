{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"machine_shape":"hm","gpuType":"T4","authorship_tag":"ABX9TyON73Ot9zDLTzNvomV/I/Qi"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"98ccf76d4c74428d9afaf618d8ddf80d":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_56fcc49b259a4f36bd0da0eb66bbd67b","IPY_MODEL_928bd24f44df4c179cd1ffb1bcb6aa76","IPY_MODEL_072419063f6b4b1caf2bdf0ba8664c7d"],"layout":"IPY_MODEL_8200c4b621524e28ba26fc0e12ec6fc1"}},"56fcc49b259a4f36bd0da0eb66bbd67b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_378d8c6aad3843eda9af7d901fa5efb2","placeholder":"​","style":"IPY_MODEL_bc491a122fe94fec823f36c48d44f99d","value":"config.json: 100%"}},"928bd24f44df4c179cd1ffb1bcb6aa76":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_06ee86bde72f42769474f3d324998187","max":747,"min":0,"orientation":"horizontal","style":"IPY_MODEL_21852bf8f19241118939dbc5bd0f7795","value":747}},"072419063f6b4b1caf2bdf0ba8664c7d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8d81261c07fc4af997b2934438b66ca4","placeholder":"​","style":"IPY_MODEL_428787e5bf1c44bb9c3625ad8b252b28","value":" 747/747 [00:00&lt;00:00, 81.8kB/s]"}},"8200c4b621524e28ba26fc0e12ec6fc1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"378d8c6aad3843eda9af7d901fa5efb2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bc491a122fe94fec823f36c48d44f99d":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"06ee86bde72f42769474f3d324998187":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"21852bf8f19241118939dbc5bd0f7795":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"8d81261c07fc4af997b2934438b66ca4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"428787e5bf1c44bb9c3625ad8b252b28":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"da8a8361a42e44278c4c499c3d3ed995":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_a0de43fce12b40fab630fd50919c3d40","IPY_MODEL_5d4ffd07a1fc4515a3e27fb84c41b5ae","IPY_MODEL_602c8321e7bd4e22ab6d752fbfe6b22d"],"layout":"IPY_MODEL_11e3b62081aa4304a6be255e7903b01b"}},"a0de43fce12b40fab630fd50919c3d40":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_2c34afb555ea4c7da91b9ae1659397c6","placeholder":"​","style":"IPY_MODEL_27543234862449978c63638c312f93ef","value":"vocab.json: "}},"5d4ffd07a1fc4515a3e27fb84c41b5ae":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_1a31e13e30da4b15b95ca4cf6de9617d","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_2f531781d90c4c1594afdd00b08dc259","value":1}},"602c8321e7bd4e22ab6d752fbfe6b22d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b3661343246542f4aeee2358fa8506d7","placeholder":"​","style":"IPY_MODEL_7c58280812284b3882c54aadb4beaf14","value":" 899k/? [00:00&lt;00:00, 1.83MB/s]"}},"11e3b62081aa4304a6be255e7903b01b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2c34afb555ea4c7da91b9ae1659397c6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"27543234862449978c63638c312f93ef":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"1a31e13e30da4b15b95ca4cf6de9617d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"20px"}},"2f531781d90c4c1594afdd00b08dc259":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"b3661343246542f4aeee2358fa8506d7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7c58280812284b3882c54aadb4beaf14":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f067bf07d8e04d1b85d12c5f364b794d":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_d01d07eb554f43fd89bb0fbb5c042872","IPY_MODEL_4ba36b256ebe4136b692fe124317f331","IPY_MODEL_aa400dc467e2485e9e1e47de5ba16c02"],"layout":"IPY_MODEL_25d298fc047947ab902f2c15618ae85e"}},"d01d07eb554f43fd89bb0fbb5c042872":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b181e8cf69554c6984d47150ca9d71e0","placeholder":"​","style":"IPY_MODEL_14c4900a4daf485eae51bc737f47ac33","value":"merges.txt: "}},"4ba36b256ebe4136b692fe124317f331":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_544ce31f022e4b3c820d922b717d5fee","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_1e1c611498924f30bb9ccfdb07354965","value":1}},"aa400dc467e2485e9e1e47de5ba16c02":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e214cf4e0c2c4439a0bf7ba9a96ac72e","placeholder":"​","style":"IPY_MODEL_af1c3fe5c0dd4251a1aea07959b422a9","value":" 456k/? [00:00&lt;00:00, 10.8MB/s]"}},"25d298fc047947ab902f2c15618ae85e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b181e8cf69554c6984d47150ca9d71e0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"14c4900a4daf485eae51bc737f47ac33":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"544ce31f022e4b3c820d922b717d5fee":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"20px"}},"1e1c611498924f30bb9ccfdb07354965":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"e214cf4e0c2c4439a0bf7ba9a96ac72e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"af1c3fe5c0dd4251a1aea07959b422a9":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"5b3a5b0c6659489e9428862f0edb1ce0":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_32d7480126294795b7d14510e9b0351b","IPY_MODEL_269736cc3d7b46f380d07402aa8e8e9a","IPY_MODEL_ba78ad65e19c46a39e3da9309bb266f8"],"layout":"IPY_MODEL_eb9783b6563e47b98d5fad4ac2a9ed85"}},"32d7480126294795b7d14510e9b0351b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_f431c1b8e0844f94bdd8355342c3c2a6","placeholder":"​","style":"IPY_MODEL_11931e4a34ec4a2f9765219d76370bf9","value":"special_tokens_map.json: 100%"}},"269736cc3d7b46f380d07402aa8e8e9a":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_8161093205454aefb56e3aaa38eca944","max":150,"min":0,"orientation":"horizontal","style":"IPY_MODEL_d81f743d59b74b5aab18ccf9dc16f54e","value":150}},"ba78ad65e19c46a39e3da9309bb266f8":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_2a8b14e7886546c7acb34523553ca0ea","placeholder":"​","style":"IPY_MODEL_5f97450a3dbd475ab3d2db4ade6871c7","value":" 150/150 [00:00&lt;00:00, 18.8kB/s]"}},"eb9783b6563e47b98d5fad4ac2a9ed85":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f431c1b8e0844f94bdd8355342c3c2a6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"11931e4a34ec4a2f9765219d76370bf9":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"8161093205454aefb56e3aaa38eca944":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d81f743d59b74b5aab18ccf9dc16f54e":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"2a8b14e7886546c7acb34523553ca0ea":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5f97450a3dbd475ab3d2db4ade6871c7":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"6759fb28740d4267bc48515c30977c6c":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_d219802179364f6cab685fccef241263","IPY_MODEL_36876012007a4a388e2e15471ab0e3b0","IPY_MODEL_143870437755484781196b0813b6c0c0"],"layout":"IPY_MODEL_72e2275ecd3d4bc8bb87b921cb2996a5"}},"d219802179364f6cab685fccef241263":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c6a9cd3570bb42d794a14078fa63118d","placeholder":"​","style":"IPY_MODEL_80b8b58f6e8f4b8093c4b8ac2caf6223","value":"pytorch_model.bin: 100%"}},"36876012007a4a388e2e15471ab0e3b0":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_7976587637a44122afe7c87ca561d2f6","max":498679497,"min":0,"orientation":"horizontal","style":"IPY_MODEL_dffb0cd9321645f6a4bfa935e9946530","value":498679497}},"143870437755484781196b0813b6c0c0":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_6dc11ad2e7ea40928dc11043ad500dc5","placeholder":"​","style":"IPY_MODEL_2e5d2660aafe4dff98ce9d42bcd0f341","value":" 499M/499M [00:20&lt;00:00, 17.1MB/s]"}},"72e2275ecd3d4bc8bb87b921cb2996a5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c6a9cd3570bb42d794a14078fa63118d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"80b8b58f6e8f4b8093c4b8ac2caf6223":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"7976587637a44122afe7c87ca561d2f6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"dffb0cd9321645f6a4bfa935e9946530":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"6dc11ad2e7ea40928dc11043ad500dc5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2e5d2660aafe4dff98ce9d42bcd0f341":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"5b909def0442453385823ca09b68b4a8":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_9505f6b5c7964e0f9bfab39747f25c74","IPY_MODEL_35619aa58d07468281535b3498249660","IPY_MODEL_33bde67f557c4ad8942ed443e4d643d5"],"layout":"IPY_MODEL_850def591ed64780acc1f2cf761ac44d"}},"9505f6b5c7964e0f9bfab39747f25c74":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_edcf37ddc0aa42dda6f88bb91876f2fc","placeholder":"​","style":"IPY_MODEL_bf1a959e0870401bae93f22fbf98069a","value":"model.safetensors: 100%"}},"35619aa58d07468281535b3498249660":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_56fdfef36fd14986b2af215b454e5a09","max":498620100,"min":0,"orientation":"horizontal","style":"IPY_MODEL_d13c1e2ae7e74c8ba811ced8f4dd7dc6","value":498620100}},"33bde67f557c4ad8942ed443e4d643d5":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_00ec9f41059a4887abbdcdec5cc7bc4a","placeholder":"​","style":"IPY_MODEL_6884c36cf0804cb68adad2ec98959e35","value":" 499M/499M [00:21&lt;00:00, 21.5MB/s]"}},"850def591ed64780acc1f2cf761ac44d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"edcf37ddc0aa42dda6f88bb91876f2fc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bf1a959e0870401bae93f22fbf98069a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"56fdfef36fd14986b2af215b454e5a09":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d13c1e2ae7e74c8ba811ced8f4dd7dc6":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"00ec9f41059a4887abbdcdec5cc7bc4a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6884c36cf0804cb68adad2ec98959e35":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"-OHbbJYAzHRy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1753566135701,"user_tz":-180,"elapsed":89727,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"43d5d880-65d7-4299-c70a-7b051c5e26ce"},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m363.4/363.4 MB\u001b[0m \u001b[31m4.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.8/13.8 MB\u001b[0m \u001b[31m49.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m24.6/24.6 MB\u001b[0m \u001b[31m43.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m883.7/883.7 kB\u001b[0m \u001b[31m60.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m664.8/664.8 MB\u001b[0m \u001b[31m2.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m211.5/211.5 MB\u001b[0m \u001b[31m4.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m56.3/56.3 MB\u001b[0m \u001b[31m31.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m127.9/127.9 MB\u001b[0m \u001b[31m17.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m207.5/207.5 MB\u001b[0m \u001b[31m4.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m21.1/21.1 MB\u001b[0m \u001b[31m45.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h"]}],"source":["!pip install -q transformers\n","!pip install -q torch\n","!pip install -q sentencepiece"]},{"cell_type":"code","source":["import pandas as pd\n","from transformers import AutoTokenizer, AutoModelForSequenceClassification\n","from scipy.special import softmax\n","import torch\n","\n","df = pd.read_csv(\"/content/MTY_Answers_real.csv\")\n","\n","# Load Model and tokenizer\n","MODEL = \"cardiffnlp/twitter-roberta-base-sentiment\"\n","tokenizer = AutoTokenizer.from_pretrained(MODEL)\n","model = AutoModelForSequenceClassification.from_pretrained(MODEL)\n"],"metadata":{"id":"KDmYEkag0dZd","colab":{"base_uri":"https://localhost:8080/","height":306,"referenced_widgets":["98ccf76d4c74428d9afaf618d8ddf80d","56fcc49b259a4f36bd0da0eb66bbd67b","928bd24f44df4c179cd1ffb1bcb6aa76","072419063f6b4b1caf2bdf0ba8664c7d","8200c4b621524e28ba26fc0e12ec6fc1","378d8c6aad3843eda9af7d901fa5efb2","bc491a122fe94fec823f36c48d44f99d","06ee86bde72f42769474f3d324998187","21852bf8f19241118939dbc5bd0f7795","8d81261c07fc4af997b2934438b66ca4","428787e5bf1c44bb9c3625ad8b252b28","da8a8361a42e44278c4c499c3d3ed995","a0de43fce12b40fab630fd50919c3d40","5d4ffd07a1fc4515a3e27fb84c41b5ae","602c8321e7bd4e22ab6d752fbfe6b22d","11e3b62081aa4304a6be255e7903b01b","2c34afb555ea4c7da91b9ae1659397c6","27543234862449978c63638c312f93ef","1a31e13e30da4b15b95ca4cf6de9617d","2f531781d90c4c1594afdd00b08dc259","b3661343246542f4aeee2358fa8506d7","7c58280812284b3882c54aadb4beaf14","f067bf07d8e04d1b85d12c5f364b794d","d01d07eb554f43fd89bb0fbb5c042872","4ba36b256ebe4136b692fe124317f331","aa400dc467e2485e9e1e47de5ba16c02","25d298fc047947ab902f2c15618ae85e","b181e8cf69554c6984d47150ca9d71e0","14c4900a4daf485eae51bc737f47ac33","544ce31f022e4b3c820d922b717d5fee","1e1c611498924f30bb9ccfdb07354965","e214cf4e0c2c4439a0bf7ba9a96ac72e","af1c3fe5c0dd4251a1aea07959b422a9","5b3a5b0c6659489e9428862f0edb1ce0","32d7480126294795b7d14510e9b0351b","269736cc3d7b46f380d07402aa8e8e9a","ba78ad65e19c46a39e3da9309bb266f8","eb9783b6563e47b98d5fad4ac2a9ed85","f431c1b8e0844f94bdd8355342c3c2a6","11931e4a34ec4a2f9765219d76370bf9","8161093205454aefb56e3aaa38eca944","d81f743d59b74b5aab18ccf9dc16f54e","2a8b14e7886546c7acb34523553ca0ea","5f97450a3dbd475ab3d2db4ade6871c7","6759fb28740d4267bc48515c30977c6c","d219802179364f6cab685fccef241263","36876012007a4a388e2e15471ab0e3b0","143870437755484781196b0813b6c0c0","72e2275ecd3d4bc8bb87b921cb2996a5","c6a9cd3570bb42d794a14078fa63118d","80b8b58f6e8f4b8093c4b8ac2caf6223","7976587637a44122afe7c87ca561d2f6","dffb0cd9321645f6a4bfa935e9946530","6dc11ad2e7ea40928dc11043ad500dc5","2e5d2660aafe4dff98ce9d42bcd0f341"]},"executionInfo":{"status":"ok","timestamp":1753566180358,"user_tz":-180,"elapsed":44643,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"b4f38b53-fdd1-4742-e15f-cebe3c07630a"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/huggingface_hub/utils/_auth.py:94: UserWarning: \n","The secret `HF_TOKEN` does not exist in your Colab secrets.\n","To authenticate with the Hugging Face Hub, create a token in your settings tab (https://huggingface.co/settings/tokens), set it as secret in your Google Colab and restart your session.\n","You will be able to reuse this secret in all of your notebooks.\n","Please note that authentication is recommended but still optional to access public models or datasets.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["config.json:   0%|          | 0.00/747 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"98ccf76d4c74428d9afaf618d8ddf80d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["vocab.json: 0.00B [00:00, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"da8a8361a42e44278c4c499c3d3ed995"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["merges.txt: 0.00B [00:00, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f067bf07d8e04d1b85d12c5f364b794d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["special_tokens_map.json:   0%|          | 0.00/150 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"5b3a5b0c6659489e9428862f0edb1ce0"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["pytorch_model.bin:   0%|          | 0.00/499M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6759fb28740d4267bc48515c30977c6c"}},"metadata":{}}]},{"cell_type":"code","source":["# Function to clasify sentiment\n","def get_sentiment_score(text):\n","    try:\n","        if pd.isna(text) or text.strip() == \"\":\n","            return pd.Series([0.0, 1.0, 0.0, 0.0], index=['score_neg', 'score_neu', 'score_pos', 'sentimiento_real'])\n","\n","        encoded_input = tokenizer(text, return_tensors='pt', truncation=True, max_length=512)\n","        with torch.no_grad():\n","            output = model(**encoded_input)\n","        scores = softmax(output.logits[0].numpy())\n","        sentiment_score = scores[2] - scores[0]  # positive - negative\n","        return pd.Series([scores[0], scores[1], scores[2], sentiment_score], index=['score_neg', 'score_neu', 'score_pos', 'sentimiento_real'])\n","\n","    except Exception as e:\n","        print(f\"Error procesando texto: {text[:30]}... — {str(e)}\")\n","        return pd.Series([0.0, 1.0, 0.0, 0.0], index=['score_neg', 'score_neu', 'score_pos', 'sentimiento_real'])\n"],"metadata":{"id":"zQBhcTKb0rxi","executionInfo":{"status":"ok","timestamp":1753566180370,"user_tz":-180,"elapsed":5,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["df[['score_neg', 'score_neu', 'score_pos', 'sentimiento_real']] = df['Answer'].apply(get_sentiment_score)\n","df.to_csv(\"/content/MTY_Answers_real_sentimient.csv\", index=False)\n"],"metadata":{"id":"82tge12V6Ada","colab":{"base_uri":"https://localhost:8080/","height":49,"referenced_widgets":["5b909def0442453385823ca09b68b4a8","9505f6b5c7964e0f9bfab39747f25c74","35619aa58d07468281535b3498249660","33bde67f557c4ad8942ed443e4d643d5","850def591ed64780acc1f2cf761ac44d","edcf37ddc0aa42dda6f88bb91876f2fc","bf1a959e0870401bae93f22fbf98069a","56fdfef36fd14986b2af215b454e5a09","d13c1e2ae7e74c8ba811ced8f4dd7dc6","00ec9f41059a4887abbdcdec5cc7bc4a","6884c36cf0804cb68adad2ec98959e35"]},"executionInfo":{"status":"ok","timestamp":1753566190860,"user_tz":-180,"elapsed":10485,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"14623496-13ea-4eeb-adc6-80d3378084f3"},"execution_count":4,"outputs":[{"output_type":"display_data","data":{"text/plain":["model.safetensors:   0%|          | 0.00/499M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"5b909def0442453385823ca09b68b4a8"}},"metadata":{}}]},{"cell_type":"code","source":["# Load the file with generated answers\n","df_gen = pd.read_csv(\"/content/MTY_Answers_generated.csv\", encoding='ISO-8859-1')\n","\n","# Apply sentiment analysis to the 'Answer_generated' column\n","df_gen[['score_neg', 'score_neu', 'score_pos', 'sentimiento_generado']] = df_gen['Answer_generated'].apply(get_sentiment_score)\n","\n","# Save the updated file with sentiment scores\n","df_gen.to_csv(\"/content/MTY_Answers_generated_sentimient.csv\", index=False)\n"],"metadata":{"id":"VX85kjE07bYp","executionInfo":{"status":"ok","timestamp":1753566217999,"user_tz":-180,"elapsed":27138,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","\n","# Load real and generated responses (with sentiment scores)\n","df_real = pd.read_csv(\"/content/MTY_Answers_real_sentimient.csv\")\n","df_gen = pd.read_csv(\"/content/MTY_Answers_generated_sentimient.csv\")\n","\n","# Group by 'pregunta' and calculate average sentiment\n","avg_sent_real = df_real.groupby(\"Number\")[\"sentimiento_real\"].mean().reset_index()\n","avg_sent_real.rename(columns={\"sentimiento_real\": \"avg_sentimiento_real\"}, inplace=True)\n","\n","avg_sent_gen = df_gen.groupby(\"Number\")[\"sentimiento_generado\"].mean().reset_index()\n","avg_sent_gen.rename(columns={\"sentimiento_generado\": \"avg_sentimiento_generado\"}, inplace=True)\n","\n","# Merge both results on the question\n","merged_avg = pd.merge(avg_sent_real, avg_sent_gen, on=\"Number\")\n","\n","# Display or export results\n","print(merged_avg)\n","merged_avg.to_csv(\"/content/avg_sentimiento_comparado.csv\", index=False)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UjVK04Mm8mwK","executionInfo":{"status":"ok","timestamp":1753566218032,"user_tz":-180,"elapsed":29,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"518abdeb-989e-4f5a-da5e-ca1afda39f12"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["   Number  avg_sentimiento_real  avg_sentimiento_generado\n","0     1.0             -0.047824                 -0.112690\n","1     2.0             -0.109670                 -0.158285\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","\n","# Load both real and generated datasets\n","df_real = pd.read_csv(\"/content/MTY_Answers_real_sentimient.csv\")\n","df_gen = pd.read_csv(\"/content/MTY_Answers_generated_sentimient.csv\")\n","\n","# Add a column to indicate source\n","df_real[\"tipo\"] = \"real\"\n","df_gen[\"tipo\"] = \"generada\"\n","\n","# Standardize sentiment column names\n","df_real.rename(columns={\"sentimiento_real\": \"sentimiento\"}, inplace=True)\n","df_gen.rename(columns={\"sentimiento_generado\": \"sentimiento\"}, inplace=True)\n","\n","# Standardize answer column names (optional)\n","df_real.rename(columns={\"Answer\": \"respuesta\"}, inplace=True)\n","df_gen.rename(columns={\"Answer_generated\": \"respuesta\"}, inplace=True)\n","\n","# Select only relevant columns\n","cols = [\"Number\", \"respuesta\", \"sentimiento\", \"tipo\"]\n","df_combined = pd.concat([df_real[cols], df_gen[cols]], ignore_index=True)\n","\n","# Compute average sentiment per question and type\n","avg_by_group = df_combined.groupby([\"Number\", \"tipo\"])[\"sentimiento\"].mean().reset_index()\n","avg_by_group.rename(columns={\"sentimiento\": \"avg_sentimiento\"}, inplace=True)\n","\n","# Merge the average back to each row\n","df_final = pd.merge(df_combined, avg_by_group, on=[\"Number\", \"tipo\"], how=\"left\")\n","\n","# Save the final combined file\n","df_final.to_csv(\"/content/MTY_Sentiment_Comparation.csv\", index=False)\n"],"metadata":{"id":"x3t5hlFIGrpF","executionInfo":{"status":"ok","timestamp":1753566218064,"user_tz":-180,"elapsed":31,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}}},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":["STADISTICAL TEST"],"metadata":{"id":"Ps4Sr5-DPUAQ"}},{"cell_type":"code","source":["import pandas as pd\n","from scipy.stats import ttest_rel\n","\n","# Load the CSV file\n","df = pd.read_csv('/content/MTY_Sentiment_Comparation.csv')\n","\n","# Initialize a list to collect results for each question\n","results = []\n","\n","# Loop over each unique question number\n","for q_num in sorted(df['Number'].dropna().unique()):\n","    # Filter data for the current question\n","    q_data = df[df['Number'] == q_num]\n","\n","    # Separate real and generated sentiment values\n","    real_q = q_data[q_data['tipo'] == 'real']['sentimiento'].reset_index(drop=True)\n","    gen_q = q_data[q_data['tipo'] == 'generada']['sentimiento'].reset_index(drop=True)\n","\n","    # Make sure we compare only pairs of responses\n","    min_len = min(len(real_q), len(gen_q))\n","    if min_len == 0:\n","        continue  # Skip questions that don't have both real and generated responses\n","\n","    real_q = real_q[:min_len]\n","    gen_q = gen_q[:min_len]\n","\n","    # Perform paired t-test\n","    t_stat, p_val = ttest_rel(real_q, gen_q)\n","\n","    # Save the results\n","    results.append({\n","        \"Question (Number)\": int(q_num),\n","        \"N pairs\": min_len,\n","        \"Mean Real\": real_q.mean(),\n","        \"Mean Generated\": gen_q.mean(),\n","        \"Mean Difference\": gen_q.mean() - real_q.mean(),\n","        \"t-statistic\": t_stat,\n","        \"p-value\": p_val,\n","        \"Significant (p < 0.05)\": p_val < 0.05\n","    })\n","\n","# Convert the list of results to a DataFrame\n","results_df = pd.DataFrame(results)\n","\n","# Display the result\n","results_df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":125},"id":"Z_vs_c_7TAtt","executionInfo":{"status":"ok","timestamp":1753566218151,"user_tz":-180,"elapsed":84,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"5b083231-8d88-40a6-f335-3ccadede5e84"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Question (Number)  N pairs  Mean Real  Mean Generated  Mean Difference  \\\n","0                  1       20  -0.047824       -0.112690        -0.064865   \n","1                  2       20  -0.109670       -0.158285        -0.048615   \n","\n","   t-statistic   p-value  Significant (p < 0.05)  \n","0     2.905215  0.009074                    True  \n","1     2.606226  0.017353                    True  "],"text/html":["\n","  <div id=\"df-a13b971d-9a94-4859-acd5-c1be42e6a91d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Question (Number)</th>\n","      <th>N pairs</th>\n","      <th>Mean Real</th>\n","      <th>Mean Generated</th>\n","      <th>Mean Difference</th>\n","      <th>t-statistic</th>\n","      <th>p-value</th>\n","      <th>Significant (p &lt; 0.05)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>-0.047824</td>\n","      <td>-0.112690</td>\n","      <td>-0.064865</td>\n","      <td>2.905215</td>\n","      <td>0.009074</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>20</td>\n","      <td>-0.109670</td>\n","      <td>-0.158285</td>\n","      <td>-0.048615</td>\n","      <td>2.606226</td>\n","      <td>0.017353</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a13b971d-9a94-4859-acd5-c1be42e6a91d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a13b971d-9a94-4859-acd5-c1be42e6a91d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a13b971d-9a94-4859-acd5-c1be42e6a91d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-4eb0edd3-22cb-479e-a5ac-0cefa705af27\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4eb0edd3-22cb-479e-a5ac-0cefa705af27')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-4eb0edd3-22cb-479e-a5ac-0cefa705af27 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_dc506e0a-58b5-4faf-a83b-e14e29884bc4\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('results_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_dc506e0a-58b5-4faf-a83b-e14e29884bc4 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('results_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"results_df","summary":"{\n  \"name\": \"results_df\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"Question (Number)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 2,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"N pairs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 20,\n        \"max\": 20,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Real\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.043731715158113214,\n        \"min\": -0.10967026166617869,\n        \"max\": -0.04782427698373792,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -0.10967026166617869\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Generated\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.03224096258381878,\n        \"min\": -0.15828525815,\n        \"max\": -0.11268965159999997,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -0.15828525815\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Difference\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.011490752574294428,\n        \"min\": -0.06486537461626204,\n        \"max\": -0.04861499648382131,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -0.04861499648382131\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"t-statistic\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2114172944706473,\n        \"min\": 2.606225559979126,\n        \"max\": 2.9052147651397418,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2.606225559979126\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"p-value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.005854128704400688,\n        \"min\": 0.009074093003998236,\n        \"max\": 0.017353081213639324,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.017353081213639324\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Significant (p < 0.05)\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["from scipy.stats import wilcoxon\n","\n","# Initialize a list to collect Wilcoxon results\n","wilcoxon_results = []\n","\n","# Loop over each unique question number\n","for q_num in sorted(df['Number'].dropna().unique()):\n","    # Filter data for the current question\n","    q_data = df[df['Number'] == q_num]\n","\n","    # Separate real and generated sentiment values\n","    real_q = q_data[q_data['tipo'] == 'real']['sentimiento'].reset_index(drop=True)\n","    gen_q = q_data[q_data['tipo'] == 'generada']['sentimiento'].reset_index(drop=True)\n","\n","    # Match the length for paired comparison\n","    min_len = min(len(real_q), len(gen_q))\n","    if min_len == 0:\n","        continue  # Skip questions with missing pairs\n","\n","    real_q = real_q[:min_len]\n","    gen_q = gen_q[:min_len]\n","\n","    # Perform Wilcoxon signed-rank test\n","    try:\n","        stat, p_val = wilcoxon(real_q, gen_q)\n","    except ValueError:\n","        # If all differences are zero or the sample is too small, skip\n","        continue\n","\n","    # Store the result\n","    wilcoxon_results.append({\n","        \"Question (Number)\": int(q_num),\n","        \"N pairs\": min_len,\n","        \"Mean Real\": real_q.mean(),\n","        \"Mean Generated\": gen_q.mean(),\n","        \"Mean Difference\": gen_q.mean() - real_q.mean(),\n","        \"Wilcoxon statistic\": stat,\n","        \"p-value\": p_val,\n","        \"Significant (p < 0.05)\": p_val < 0.05\n","    })\n","\n","# Convert to DataFrame\n","wilcoxon_df = pd.DataFrame(wilcoxon_results)\n","\n","# Display the result\n","wilcoxon_df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":125},"id":"80bZ9xmhYKnP","executionInfo":{"status":"ok","timestamp":1753566218474,"user_tz":-180,"elapsed":321,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"fbe6dcb5-fe50-4170-c34c-9575ebfc981a"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Question (Number)  N pairs  Mean Real  Mean Generated  Mean Difference  \\\n","0                  1       20  -0.047824       -0.112690        -0.064865   \n","1                  2       20  -0.109670       -0.158285        -0.048615   \n","\n","   Wilcoxon statistic   p-value  Significant (p < 0.05)  \n","0                28.0  0.002712                    True  \n","1                42.0  0.017181                    True  "],"text/html":["\n","  <div id=\"df-e5f09245-da3e-42ad-9acd-ed6abb0882af\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Question (Number)</th>\n","      <th>N pairs</th>\n","      <th>Mean Real</th>\n","      <th>Mean Generated</th>\n","      <th>Mean Difference</th>\n","      <th>Wilcoxon statistic</th>\n","      <th>p-value</th>\n","      <th>Significant (p &lt; 0.05)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>-0.047824</td>\n","      <td>-0.112690</td>\n","      <td>-0.064865</td>\n","      <td>28.0</td>\n","      <td>0.002712</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>20</td>\n","      <td>-0.109670</td>\n","      <td>-0.158285</td>\n","      <td>-0.048615</td>\n","      <td>42.0</td>\n","      <td>0.017181</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e5f09245-da3e-42ad-9acd-ed6abb0882af')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e5f09245-da3e-42ad-9acd-ed6abb0882af button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e5f09245-da3e-42ad-9acd-ed6abb0882af');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-e6f9fafa-143e-45da-90d7-9013e6a597eb\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e6f9fafa-143e-45da-90d7-9013e6a597eb')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-e6f9fafa-143e-45da-90d7-9013e6a597eb button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_ab9c4fd8-8d76-49d2-aed3-d2209743b314\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('wilcoxon_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_ab9c4fd8-8d76-49d2-aed3-d2209743b314 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('wilcoxon_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"wilcoxon_df","summary":"{\n  \"name\": \"wilcoxon_df\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"Question (Number)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 2,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"N pairs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 20,\n        \"max\": 20,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Real\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.043731715158113214,\n        \"min\": -0.10967026166617869,\n        \"max\": -0.04782427698373792,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -0.10967026166617869\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Generated\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.03224096258381878,\n        \"min\": -0.15828525815,\n        \"max\": -0.11268965159999997,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -0.15828525815\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Difference\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.011490752574294428,\n        \"min\": -0.06486537461626204,\n        \"max\": -0.04861499648382131,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -0.04861499648382131\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Wilcoxon statistic\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.899494936611665,\n        \"min\": 28.0,\n        \"max\": 42.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          42.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"p-value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.010231231769716548,\n        \"min\": 0.002712249755859375,\n        \"max\": 0.017181396484375,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.017181396484375\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Significant (p < 0.05)\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["from scipy.stats import ks_2samp\n","\n","# Initialize a list to collect KS test results\n","ks_results = []\n","\n","# Loop through each unique question\n","for q_num in sorted(df['Number'].dropna().unique()):\n","    # Filter data for the current question\n","    q_data = df[df['Number'] == q_num]\n","\n","    # Separate sentiment values\n","    real_q = q_data[q_data['tipo'] == 'real']['sentimiento'].reset_index(drop=True)\n","    gen_q = q_data[q_data['tipo'] == 'generada']['sentimiento'].reset_index(drop=True)\n","\n","    # Perform K-S test only if both have values\n","    if len(real_q) > 0 and len(gen_q) > 0:\n","        ks_stat, p_val = ks_2samp(real_q, gen_q)\n","        ks_results.append({\n","            \"Question (Number)\": int(q_num),\n","            \"N Real\": len(real_q),\n","            \"N Generated\": len(gen_q),\n","            \"Mean Real\": real_q.mean(),\n","            \"Mean Generated\": gen_q.mean(),\n","            \"K-S statistic\": ks_stat,\n","            \"p-value\": p_val,\n","            \"Significant (p < 0.05)\": p_val < 0.05\n","        })\n","\n","# Convert results to DataFrame\n","ks_df = pd.DataFrame(ks_results)\n","\n","# Display the table\n","ks_df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":125},"id":"ZIeqaBwSZGHe","executionInfo":{"status":"ok","timestamp":1753566218758,"user_tz":-180,"elapsed":282,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"41cfe993-102d-43d6-d2f4-156ac5c2f187"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Question (Number)  N Real  N Generated  Mean Real  Mean Generated  \\\n","0                  1      20           20  -0.047824       -0.112690   \n","1                  2      20           20  -0.109670       -0.158285   \n","\n","   K-S statistic   p-value  Significant (p < 0.05)  \n","0            0.5  0.012299                    True  \n","1            0.4  0.081058                   False  "],"text/html":["\n","  <div id=\"df-4c97db95-66be-4805-bc35-de2f28a0b962\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Question (Number)</th>\n","      <th>N Real</th>\n","      <th>N Generated</th>\n","      <th>Mean Real</th>\n","      <th>Mean Generated</th>\n","      <th>K-S statistic</th>\n","      <th>p-value</th>\n","      <th>Significant (p &lt; 0.05)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>20</td>\n","      <td>-0.047824</td>\n","      <td>-0.112690</td>\n","      <td>0.5</td>\n","      <td>0.012299</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>20</td>\n","      <td>20</td>\n","      <td>-0.109670</td>\n","      <td>-0.158285</td>\n","      <td>0.4</td>\n","      <td>0.081058</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4c97db95-66be-4805-bc35-de2f28a0b962')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4c97db95-66be-4805-bc35-de2f28a0b962 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4c97db95-66be-4805-bc35-de2f28a0b962');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-ee4cef9c-3a56-45b7-b731-a54578f0e1d4\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ee4cef9c-3a56-45b7-b731-a54578f0e1d4')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-ee4cef9c-3a56-45b7-b731-a54578f0e1d4 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_ae5b8aad-b2e6-404d-a791-8ab2a75ada2b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('ks_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_ae5b8aad-b2e6-404d-a791-8ab2a75ada2b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('ks_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"ks_df","summary":"{\n  \"name\": \"ks_df\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"Question (Number)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 2,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"N Real\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 20,\n        \"max\": 20,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"N Generated\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 20,\n        \"max\": 20,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Real\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.043731715158113214,\n        \"min\": -0.10967026166617869,\n        \"max\": -0.04782427698373792,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -0.10967026166617869\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Generated\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.03224096258381878,\n        \"min\": -0.15828525815,\n        \"max\": -0.11268965159999997,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -0.15828525815\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"K-S statistic\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07071067811865474,\n        \"min\": 0.4,\n        \"max\": 0.5,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"p-value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04862002519199984,\n        \"min\": 0.012298612583953778,\n        \"max\": 0.08105771161340149,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.08105771161340149\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Significant (p < 0.05)\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["import seaborn as sns\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","\n","# Set style for consistency\n","sns.set(style=\"whitegrid\")\n","\n","# Loop through each question\n","question_numbers = sorted(df['Number'].dropna().unique())\n","\n","for q_num in question_numbers:\n","    q_data = df[df['Number'] == q_num].copy()\n","\n","    if q_data['tipo'].nunique() < 2:\n","        continue\n","\n","    # Rename labels for clarity\n","    q_data['tipo'] = q_data['tipo'].replace({'real': 'Dataset', 'generada': 'Model'})\n","\n","    plt.figure(figsize=(6, 5))\n","\n","    # Boxplot\n","    ax = sns.boxplot(\n","        data=q_data,\n","        x='tipo',\n","        y='sentimiento',\n","        order=['Model', 'Dataset'],  # Specify the order here\n","        palette='pastel',  # Use pastel palette\n","        linewidth=2.5\n","    )\n","\n","    # Stripplot\n","    sns.stripplot(\n","        data=q_data,\n","        x='tipo',\n","        y='sentimiento',\n","        order=['Model', 'Dataset'],  # Specify the order here\n","        color='black',\n","        alpha=0.4\n","    )\n","\n","    # Calculate and add average sentiment text to the side\n","    avg_sentiment_model = q_data[q_data['tipo'] == 'Model']['sentimiento'].mean()\n","    avg_sentiment_dataset = q_data[q_data['tipo'] == 'Dataset']['sentimiento'].mean()\n","\n","    # Get current y-axis limits\n","    ymin, ymax = ax.get_ylim()\n","    y_text_pos = ymax * 0.75  # Adjust the y-coordinate for text placement\n","\n","    ax.text(0, y_text_pos, f'Model Avg: {avg_sentiment_model:.2f}',\n","            horizontalalignment='center', size='small', color='black', weight='semibold')\n","    ax.text(1, y_text_pos, f'Dataset Avg: {avg_sentiment_dataset:.2f}',\n","            horizontalalignment='center', size='small', color='black', weight='semibold')\n","\n","\n","    plt.title(f'MTY: Sentiment Distribution - Question {int(q_num)}')\n","    plt.xlabel('Response Type')\n","    plt.ylabel('Sentiment Score')\n","    plt.grid(True)\n","    plt.show()"],"metadata":{"id":"3WAqsp3jeeX0","executionInfo":{"status":"ok","timestamp":1753567469709,"user_tz":-180,"elapsed":450,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"7c5a9036-4ff8-4c67-c454-6529e85df28a","colab":{"base_uri":"https://localhost:8080/","height":1000}},"execution_count":17,"outputs":[{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-17-1393795775.py:23: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  ax = sns.boxplot(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 600x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-17-1393795775.py:23: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  ax = sns.boxplot(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 600x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["COMPARATION VS FULL CORPUS"],"metadata":{"id":"G5-WA_da5vuf"}},{"cell_type":"code","source":["import pandas as pd\n","import torch\n","from transformers import AutoTokenizer, AutoModelForSequenceClassification\n","from torch.nn.functional import softmax\n","from tqdm import tqdm\n","\n","# Load corpus file\n","df_corpus = pd.read_csv(\"/content/base_MTY_C+B_35-55.csv\", encoding='ISO-8859-1')\n","\n","# Load model and tokenizer\n","model_name = \"cardiffnlp/twitter-roberta-base-sentiment\"\n","tokenizer = AutoTokenizer.from_pretrained(model_name)\n","model = AutoModelForSequenceClassification.from_pretrained(model_name)\n","\n","# Function to get sentiment score from text using same logic as your image\n","def get_sentiment_score(text):\n","    try:\n","        if pd.isna(text) or text.strip() == \"\":\n","            return pd.Series([0.0, 1.0, 0.0, 0.0], index=['score_neg', 'score_neu', 'score_pos', 'sentiment_score'])\n","\n","        encoded_input = tokenizer(text, return_tensors='pt', truncation=True, max_length=512)\n","        with torch.no_grad():\n","            output = model(**encoded_input)\n","        scores = softmax(output.logits[0], dim=0).numpy()\n","        sentiment_score = scores[2] - scores[0]  # positive - negative\n","        return pd.Series([scores[0], scores[1], scores[2], sentiment_score], index=['score_neg', 'score_neu', 'score_pos', 'sentiment_score'])\n","    except:\n","        return pd.Series([None, None, None, None], index=['score_neg', 'score_neu', 'score_pos', 'sentiment_score'])\n"],"metadata":{"id":"UE0XBtrLQxVl","executionInfo":{"status":"ok","timestamp":1753566222024,"user_tz":-180,"elapsed":2964,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["# Apply to the \"Participación\" column with progress bar\n","tqdm.pandas()\n","scores_df = df_corpus['Participación'].astype(str).progress_apply(get_sentiment_score)\n","\n","# Combine with original DataFrame\n","df_corpus_sentiment = pd.concat([df_corpus.reset_index(drop=True), scores_df], axis=1)\n","\n","# Drop rows with errors\n","df_corpus_sentiment = df_corpus_sentiment.dropna(subset=['sentiment_score'])\n","\n","\n","# Quick check\n","df_corpus_sentiment[['Participación', 'sentiment_score']].head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":224},"id":"F1nkAt1x6KAy","executionInfo":{"status":"ok","timestamp":1753566528942,"user_tz":-180,"elapsed":306916,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"8a72b116-8b84-44d5-8643-3fe0c035ce1f"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 3321/3321 [05:06<00:00, 10.82it/s]\n"]},{"output_type":"execute_result","data":{"text/plain":["                                       Participación  sentiment_score\n","0                                            Ahí ya.        -0.037532\n","1               Esta es la primera vez que uso esta.        -0.020686\n","2                                                así        -0.066450\n","3                        aparece mi regreso para mí.        -0.001293\n","4  Se minimizar mi video y ver tu video pantalla ...        -0.024201"],"text/html":["\n","  <div id=\"df-f082ac15-ce1b-435c-a0a3-8940986bb80b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Participación</th>\n","      <th>sentiment_score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Ahí ya.</td>\n","      <td>-0.037532</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Esta es la primera vez que uso esta.</td>\n","      <td>-0.020686</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>así</td>\n","      <td>-0.066450</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>aparece mi regreso para mí.</td>\n","      <td>-0.001293</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Se minimizar mi video y ver tu video pantalla ...</td>\n","      <td>-0.024201</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f082ac15-ce1b-435c-a0a3-8940986bb80b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f082ac15-ce1b-435c-a0a3-8940986bb80b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f082ac15-ce1b-435c-a0a3-8940986bb80b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-dbc92d2c-d70c-413d-8be7-43632b1b92ec\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dbc92d2c-d70c-413d-8be7-43632b1b92ec')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-dbc92d2c-d70c-413d-8be7-43632b1b92ec button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df_corpus_sentiment[['Participaci\\u00f3n', 'sentiment_score']]\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Participaci\\u00f3n\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Esta\\u00a0es\\u00a0la\\u00a0primera\\u00a0vez\\u00a0que\\u00a0uso\\u00a0esta.\",\n          \"Se\\u00a0minimizar\\u00a0mi\\u00a0video\\u00a0y\\u00a0ver\\u00a0tu\\u00a0video\\u00a0pantalla\\u00a0completa.\",\n          \"as\\u00ed\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sentiment_score\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          -0.020686328411102295,\n          -0.024200953543186188,\n          -0.06645022332668304\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["# Calculate and print the average sentiment score of the corpus\n","avg_sentiment = df_corpus_sentiment[\"sentiment_score\"].mean()\n","print(f\"Average Sentiment Score (Corpus - Recalculated): {avg_sentiment:.3f}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iS5tTHDw-nEm","executionInfo":{"status":"ok","timestamp":1753566528958,"user_tz":-180,"elapsed":12,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"4f41c9ba-1cef-4dc7-e4e5-23145dd07f2f"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["Average Sentiment Score (Corpus - Recalculated): -0.037\n"]}]},{"cell_type":"code","source":["from scipy.stats import ttest_ind, ks_2samp\n","\n","# Load generated sentiment scores\n","df_generated = pd.read_csv(\"/content/MTY_Sentiment_Comparation.csv\", encoding='ISO-8859-1')\n","sent_gen = df_generated[df_generated[\"tipo\"] == \"generada\"][\"sentimiento\"].dropna()\n","\n","# Load recalculated corpus sentiment scores\n","# (assuming you already have df_corpus_sentiment from the previous step)\n","sent_corpus = df_corpus_sentiment[\"sentiment_score\"].dropna()\n","\n","# Perform t-test\n","t_stat, p_val_t = ttest_ind(sent_gen, sent_corpus)\n","\n","# Perform K-S test\n","ks_stat, p_val_ks = ks_2samp(sent_gen, sent_corpus)\n","\n","# Print results\n","print(f\"Average Sentiment - Corpus (Recalculated): {sent_corpus.mean():.3f}\")\n","print(f\"Average Sentiment - Generated: {sent_gen.mean():.3f}\")\n","print(f\"\\nT-test p-value: {p_val_t:.5f}\")\n","print(f\"K-S test p-value: {p_val_ks:.5f}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Is8X_pmQAZU4","executionInfo":{"status":"ok","timestamp":1753566528970,"user_tz":-180,"elapsed":10,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"b8bc41bb-a95a-44a4-afee-47df8caf678a"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["Average Sentiment - Corpus (Recalculated): -0.037\n","Average Sentiment - Generated: -0.120\n","\n","T-test p-value: 0.00000\n","K-S test p-value: 0.00000\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","import pandas as pd\n","\n","# Combine the two series into a single DataFrame for plotting\n","df_plot = pd.DataFrame({\n","    \"Sentiment\": pd.concat([sent_corpus, sent_gen], ignore_index=True),\n","    \"Source\": [\"Full Corpus\"] * len(sent_corpus) + [\"Model\"] * len(sent_gen)\n","})\n","\n","# Set style\n","sns.set(style=\"whitegrid\")\n","\n","# Plot boxplot\n","plt.figure(figsize=(6, 5))\n","ax = sns.boxplot(\n","    data=df_plot,\n","    x=\"Source\",\n","    y=\"Sentiment\",\n","    hue=\"Source\", # Assign 'Source' to hue\n","    order=[\"Model\", \"Full Corpus\"], # Specify the order here\n","    palette=\"pastel\", # Changed palette to pastel\n","    linewidth=2.5,\n","    legend=False # Set legend to False as per the warning\n",")\n","\n","# Stripplot\n","sns.stripplot(\n","    data=df_plot,\n","    x=\"Source\",\n","    y=\"Sentiment\",\n","    order=[\"Model\", \"Full Corpus\"], # Specify the order here\n","    color='black',\n","    alpha=0.4\n",")\n","\n","# Calculate and add average sentiment text to the side\n","avg_sentiment_model = df_plot[df_plot['Source'] == 'Model']['Sentiment'].mean()\n","avg_sentiment_corpus = df_plot[df_plot['Source'] == 'Full Corpus']['Sentiment'].mean()\n","\n","# Get current y-axis limits\n","ymin, ymax = ax.get_ylim()\n","y_text_pos = ymax * 0.75 # Adjust the y-coordinate for text placement\n","\n","ax.text(0, y_text_pos, f'Model Avg: {avg_sentiment_model:.2f}',\n","        horizontalalignment='center', size='small', color='black', weight='semibold')\n","ax.text(1, y_text_pos, f'Corpus Avg: {avg_sentiment_corpus:.2f}',\n","        horizontalalignment='center', size='small', color='black', weight='semibold')\n","\n","plt.title(\"Boxplot of Sentiment: Corpus vs Generated\")\n","plt.xlabel(\"Response Source\")\n","plt.ylabel(\"Sentiment Score (-1 to 1)\")\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":496},"id":"R8meAedxA30p","executionInfo":{"status":"ok","timestamp":1753567637063,"user_tz":-180,"elapsed":172,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"b8213c16-a304-4f24-acd8-02c82ac9f61f"},"execution_count":21,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 600x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}