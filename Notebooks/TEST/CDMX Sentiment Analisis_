{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1ZACVnpUdecrrJmBoIZtshLQGM3-GahOV","timestamp":1752525487690}],"machine_shape":"hm","authorship_tag":"ABX9TyOz7WojeNBklBbH3sUzItV+"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"31c03f6eb4534baa8744b55b8924c05a":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_e6749be89b7e4b08ba36760e8409e047","IPY_MODEL_8b5134ecf7e04a199ea7159ecf7e97ee","IPY_MODEL_7ee971e76b9f48f8b149a5a836edd3d2"],"layout":"IPY_MODEL_ec976e918d034bb586f7cbaac846a07b"}},"e6749be89b7e4b08ba36760e8409e047":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d1438df571cf464cbc07a86146675290","placeholder":"​","style":"IPY_MODEL_86e97596e6504336ba7a062d326b56d8","value":"config.json: 100%"}},"8b5134ecf7e04a199ea7159ecf7e97ee":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_0b276a70dd344ae3aa9c6a655de58815","max":747,"min":0,"orientation":"horizontal","style":"IPY_MODEL_4b9be8e28f9848239d9fb1ee114e592b","value":747}},"7ee971e76b9f48f8b149a5a836edd3d2":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b2e74a41a9b94ddeb802ce78479199fa","placeholder":"​","style":"IPY_MODEL_887c47ddbfba47c3b4e8e03a8f8aff09","value":" 747/747 [00:00&lt;00:00, 86.3kB/s]"}},"ec976e918d034bb586f7cbaac846a07b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d1438df571cf464cbc07a86146675290":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"86e97596e6504336ba7a062d326b56d8":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0b276a70dd344ae3aa9c6a655de58815":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4b9be8e28f9848239d9fb1ee114e592b":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"b2e74a41a9b94ddeb802ce78479199fa":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"887c47ddbfba47c3b4e8e03a8f8aff09":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"48eb38e5d9a446e89671782073471315":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_970b8c8333f24334a7d687b711bf299a","IPY_MODEL_7add52a9e7e54c0d8d69874e5a7f7374","IPY_MODEL_7e9192ef05a84c878b4d7a727b069f19"],"layout":"IPY_MODEL_d7b50555500949a08f6cfc90fe7b6cf7"}},"970b8c8333f24334a7d687b711bf299a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_85433e226f7343a8b9292e92c0401e7d","placeholder":"​","style":"IPY_MODEL_5f6d67df5eb549ea84f84f2a9be3ab77","value":"vocab.json: "}},"7add52a9e7e54c0d8d69874e5a7f7374":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_4ea619176d0945378f5ac039e728b01e","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_7d585de9186242a3b86f7d4ae6a5c96f","value":1}},"7e9192ef05a84c878b4d7a727b069f19":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_73897ae6c12b48c8849def94f50c06ee","placeholder":"​","style":"IPY_MODEL_9b43e582bf784bc1b84ff9e9cd704869","value":" 899k/? [00:00&lt;00:00, 14.7MB/s]"}},"d7b50555500949a08f6cfc90fe7b6cf7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"85433e226f7343a8b9292e92c0401e7d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5f6d67df5eb549ea84f84f2a9be3ab77":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4ea619176d0945378f5ac039e728b01e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"20px"}},"7d585de9186242a3b86f7d4ae6a5c96f":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"73897ae6c12b48c8849def94f50c06ee":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9b43e582bf784bc1b84ff9e9cd704869":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"9216f7d371c64f91bb6a7420ef15f31d":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_ca38dc5cbd3243aa974230c6ebd39caf","IPY_MODEL_054a9c5da7a34f2ea613bc3bfbf1710c","IPY_MODEL_12c6f8854ecd4c9b824a63ec765f7851"],"layout":"IPY_MODEL_c60286cf415c47b788c282469187b436"}},"ca38dc5cbd3243aa974230c6ebd39caf":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b24c14fea504472d80e0a4222be09980","placeholder":"​","style":"IPY_MODEL_8e03aeda6ea9491bacc98c466652b1d8","value":"merges.txt: "}},"054a9c5da7a34f2ea613bc3bfbf1710c":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_d746fc5e34564866bd7ab71c18304f5b","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_784345119f5640bdbe82d164ae58d463","value":1}},"12c6f8854ecd4c9b824a63ec765f7851":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e0ce972b2726445a90a3ae745f7974d3","placeholder":"​","style":"IPY_MODEL_bac8cfb0757046bda9b331aac754909a","value":" 456k/? [00:00&lt;00:00, 24.3MB/s]"}},"c60286cf415c47b788c282469187b436":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b24c14fea504472d80e0a4222be09980":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8e03aeda6ea9491bacc98c466652b1d8":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d746fc5e34564866bd7ab71c18304f5b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"20px"}},"784345119f5640bdbe82d164ae58d463":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"e0ce972b2726445a90a3ae745f7974d3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bac8cfb0757046bda9b331aac754909a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"75721ed660e54ee5b34c2ed2d0d58a60":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_90cc700792bd41c3a0b25959915d06b6","IPY_MODEL_05ae611dafda4deab4aea09dd4a0826b","IPY_MODEL_9966b09dee344fedabe59ac5f943bd72"],"layout":"IPY_MODEL_2f28b9b778ef4c718ed9128bd0abc4ed"}},"90cc700792bd41c3a0b25959915d06b6":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_0202094369674b93b840e0d7b8499006","placeholder":"​","style":"IPY_MODEL_11d7b34f10e344a18fc943a871a407df","value":"special_tokens_map.json: 100%"}},"05ae611dafda4deab4aea09dd4a0826b":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_0e92ca77d7764699893f17ef4471a59b","max":150,"min":0,"orientation":"horizontal","style":"IPY_MODEL_080848cde1eb42edb28d169ea8aec6cb","value":150}},"9966b09dee344fedabe59ac5f943bd72":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ece1a56136a441da94a8261f10846910","placeholder":"​","style":"IPY_MODEL_0df0212c0faf4feead8938d718533238","value":" 150/150 [00:00&lt;00:00, 13.2kB/s]"}},"2f28b9b778ef4c718ed9128bd0abc4ed":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0202094369674b93b840e0d7b8499006":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"11d7b34f10e344a18fc943a871a407df":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0e92ca77d7764699893f17ef4471a59b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"080848cde1eb42edb28d169ea8aec6cb":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"ece1a56136a441da94a8261f10846910":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0df0212c0faf4feead8938d718533238":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"05ff7ad7f78f4565bed64e795bdeef0c":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_12fd0b672a3a40349022d04b9c45f887","IPY_MODEL_bbfb9abc130e4e1684d3d357e59c34c9","IPY_MODEL_d713108e44814f23a0d23208e755e3d7"],"layout":"IPY_MODEL_d682f516ded04e1492af2b7020c68e33"}},"12fd0b672a3a40349022d04b9c45f887":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d5c2bae582ec4ac993fa7cf5571e8f61","placeholder":"​","style":"IPY_MODEL_a0331d8fe28342b7a670c24f36f52705","value":"pytorch_model.bin: 100%"}},"bbfb9abc130e4e1684d3d357e59c34c9":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_02061acaaf0b42a695b02d718328ecdc","max":498679497,"min":0,"orientation":"horizontal","style":"IPY_MODEL_6cccce6d753b4adca73b72cee032091c","value":498679497}},"d713108e44814f23a0d23208e755e3d7":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b77c85f760e24a23adad6cb332a9fbf1","placeholder":"​","style":"IPY_MODEL_d24448f31f924269a6c8132d4c1e546d","value":" 499M/499M [00:02&lt;00:00, 290MB/s]"}},"d682f516ded04e1492af2b7020c68e33":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d5c2bae582ec4ac993fa7cf5571e8f61":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a0331d8fe28342b7a670c24f36f52705":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"02061acaaf0b42a695b02d718328ecdc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6cccce6d753b4adca73b72cee032091c":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"b77c85f760e24a23adad6cb332a9fbf1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d24448f31f924269a6c8132d4c1e546d":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b2f37e6613b04219a0b36e9bf8a83245":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_0617506fff4a4e5388dfede820782e9b","IPY_MODEL_be889cf260594d47a559717bea43bcc3","IPY_MODEL_7cde71b4759e4c15a59853e046063fc8"],"layout":"IPY_MODEL_c696fcc56f684412ae6355f8719c255b"}},"0617506fff4a4e5388dfede820782e9b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_7a3bd528aec94632810cd1b769548e39","placeholder":"​","style":"IPY_MODEL_9ccde1d315d645e7bcfdab79bbd97d37","value":"model.safetensors: 100%"}},"be889cf260594d47a559717bea43bcc3":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_0753b1d0607244bd8b1ea880e7e21ba6","max":498620100,"min":0,"orientation":"horizontal","style":"IPY_MODEL_96449e1d5f08448aa11979b51c8255a8","value":498620100}},"7cde71b4759e4c15a59853e046063fc8":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c47dcd98c19b46ad96d851889a071581","placeholder":"​","style":"IPY_MODEL_20ac0814378a4693b7aa49f0f0e44b43","value":" 499M/499M [00:03&lt;00:00, 171MB/s]"}},"c696fcc56f684412ae6355f8719c255b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7a3bd528aec94632810cd1b769548e39":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9ccde1d315d645e7bcfdab79bbd97d37":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0753b1d0607244bd8b1ea880e7e21ba6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"96449e1d5f08448aa11979b51c8255a8":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"c47dcd98c19b46ad96d851889a071581":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"20ac0814378a4693b7aa49f0f0e44b43":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"-OHbbJYAzHRy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1753565667670,"user_tz":-180,"elapsed":68479,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"164cc74f-240d-4e17-9caf-93d5fea21e01"},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m363.4/363.4 MB\u001b[0m \u001b[31m3.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.8/13.8 MB\u001b[0m \u001b[31m140.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m24.6/24.6 MB\u001b[0m \u001b[31m115.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m883.7/883.7 kB\u001b[0m \u001b[31m59.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m664.8/664.8 MB\u001b[0m \u001b[31m2.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m211.5/211.5 MB\u001b[0m \u001b[31m4.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m56.3/56.3 MB\u001b[0m \u001b[31m49.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m127.9/127.9 MB\u001b[0m \u001b[31m22.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m207.5/207.5 MB\u001b[0m \u001b[31m4.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m21.1/21.1 MB\u001b[0m \u001b[31m116.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h"]}],"source":["!pip install -q transformers\n","!pip install -q torch\n","!pip install -q sentencepiece"]},{"cell_type":"code","source":["import pandas as pd\n","from transformers import AutoTokenizer, AutoModelForSequenceClassification\n","from scipy.special import softmax\n","import torch\n","\n","df = pd.read_csv(\"/content/CDMX_Answers_real.csv\")\n","\n","# Load Model and tokenizer\n","MODEL = \"cardiffnlp/twitter-roberta-base-sentiment\"\n","tokenizer = AutoTokenizer.from_pretrained(MODEL)\n","model = AutoModelForSequenceClassification.from_pretrained(MODEL)\n"],"metadata":{"id":"KDmYEkag0dZd","executionInfo":{"status":"ok","timestamp":1753565692494,"user_tz":-180,"elapsed":24822,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"colab":{"base_uri":"https://localhost:8080/","height":338,"referenced_widgets":["31c03f6eb4534baa8744b55b8924c05a","e6749be89b7e4b08ba36760e8409e047","8b5134ecf7e04a199ea7159ecf7e97ee","7ee971e76b9f48f8b149a5a836edd3d2","ec976e918d034bb586f7cbaac846a07b","d1438df571cf464cbc07a86146675290","86e97596e6504336ba7a062d326b56d8","0b276a70dd344ae3aa9c6a655de58815","4b9be8e28f9848239d9fb1ee114e592b","b2e74a41a9b94ddeb802ce78479199fa","887c47ddbfba47c3b4e8e03a8f8aff09","48eb38e5d9a446e89671782073471315","970b8c8333f24334a7d687b711bf299a","7add52a9e7e54c0d8d69874e5a7f7374","7e9192ef05a84c878b4d7a727b069f19","d7b50555500949a08f6cfc90fe7b6cf7","85433e226f7343a8b9292e92c0401e7d","5f6d67df5eb549ea84f84f2a9be3ab77","4ea619176d0945378f5ac039e728b01e","7d585de9186242a3b86f7d4ae6a5c96f","73897ae6c12b48c8849def94f50c06ee","9b43e582bf784bc1b84ff9e9cd704869","9216f7d371c64f91bb6a7420ef15f31d","ca38dc5cbd3243aa974230c6ebd39caf","054a9c5da7a34f2ea613bc3bfbf1710c","12c6f8854ecd4c9b824a63ec765f7851","c60286cf415c47b788c282469187b436","b24c14fea504472d80e0a4222be09980","8e03aeda6ea9491bacc98c466652b1d8","d746fc5e34564866bd7ab71c18304f5b","784345119f5640bdbe82d164ae58d463","e0ce972b2726445a90a3ae745f7974d3","bac8cfb0757046bda9b331aac754909a","75721ed660e54ee5b34c2ed2d0d58a60","90cc700792bd41c3a0b25959915d06b6","05ae611dafda4deab4aea09dd4a0826b","9966b09dee344fedabe59ac5f943bd72","2f28b9b778ef4c718ed9128bd0abc4ed","0202094369674b93b840e0d7b8499006","11d7b34f10e344a18fc943a871a407df","0e92ca77d7764699893f17ef4471a59b","080848cde1eb42edb28d169ea8aec6cb","ece1a56136a441da94a8261f10846910","0df0212c0faf4feead8938d718533238","05ff7ad7f78f4565bed64e795bdeef0c","12fd0b672a3a40349022d04b9c45f887","bbfb9abc130e4e1684d3d357e59c34c9","d713108e44814f23a0d23208e755e3d7","d682f516ded04e1492af2b7020c68e33","d5c2bae582ec4ac993fa7cf5571e8f61","a0331d8fe28342b7a670c24f36f52705","02061acaaf0b42a695b02d718328ecdc","6cccce6d753b4adca73b72cee032091c","b77c85f760e24a23adad6cb332a9fbf1","d24448f31f924269a6c8132d4c1e546d","b2f37e6613b04219a0b36e9bf8a83245","0617506fff4a4e5388dfede820782e9b","be889cf260594d47a559717bea43bcc3","7cde71b4759e4c15a59853e046063fc8","c696fcc56f684412ae6355f8719c255b","7a3bd528aec94632810cd1b769548e39","9ccde1d315d645e7bcfdab79bbd97d37","0753b1d0607244bd8b1ea880e7e21ba6","96449e1d5f08448aa11979b51c8255a8","c47dcd98c19b46ad96d851889a071581","20ac0814378a4693b7aa49f0f0e44b43"]},"outputId":"48a19f8d-05f0-4299-c016-5124d51c7143"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/huggingface_hub/utils/_auth.py:94: UserWarning: \n","The secret `HF_TOKEN` does not exist in your Colab secrets.\n","To authenticate with the Hugging Face Hub, create a token in your settings tab (https://huggingface.co/settings/tokens), set it as secret in your Google Colab and restart your session.\n","You will be able to reuse this secret in all of your notebooks.\n","Please note that authentication is recommended but still optional to access public models or datasets.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["config.json:   0%|          | 0.00/747 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"31c03f6eb4534baa8744b55b8924c05a"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["vocab.json: 0.00B [00:00, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"48eb38e5d9a446e89671782073471315"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["merges.txt: 0.00B [00:00, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"9216f7d371c64f91bb6a7420ef15f31d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["special_tokens_map.json:   0%|          | 0.00/150 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"75721ed660e54ee5b34c2ed2d0d58a60"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["pytorch_model.bin:   0%|          | 0.00/499M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"05ff7ad7f78f4565bed64e795bdeef0c"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["model.safetensors:   0%|          | 0.00/499M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b2f37e6613b04219a0b36e9bf8a83245"}},"metadata":{}}]},{"cell_type":"code","source":["# Function to clasify sentiment\n","def get_sentiment_score(text):\n","    try:\n","        if pd.isna(text) or text.strip() == \"\":\n","            return pd.Series([0.0, 1.0, 0.0, 0.0], index=['score_neg', 'score_neu', 'score_pos', 'sentimiento_real'])\n","\n","        encoded_input = tokenizer(text, return_tensors='pt', truncation=True, max_length=512)\n","        with torch.no_grad():\n","            output = model(**encoded_input)\n","        scores = softmax(output.logits[0].numpy())\n","        sentiment_score = scores[2] - scores[0]  # positive - negative\n","        return pd.Series([scores[0], scores[1], scores[2], sentiment_score], index=['score_neg', 'score_neu', 'score_pos', 'sentimiento_real'])\n","\n","    except Exception as e:\n","        print(f\"Error procesando texto: {text[:30]}... — {str(e)}\")\n","        return pd.Series([0.0, 1.0, 0.0, 0.0], index=['score_neg', 'score_neu', 'score_pos', 'sentimiento_real'])\n"],"metadata":{"id":"zQBhcTKb0rxi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df[['score_neg', 'score_neu', 'score_pos', 'sentimiento_real']] = df['Answer'].apply(get_sentiment_score)\n","df.to_csv(\"/content/CDMX_Answers_real_sentimient.csv\", index=False)\n"],"metadata":{"id":"82tge12V6Ada"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Load the file with generated answers\n","df_gen = pd.read_csv(\"/content/CDMX_Answers_generated.csv\", encoding='ISO-8859-1')\n","\n","# Apply sentiment analysis to the 'Answer_generated' column\n","df_gen[['score_neg', 'score_neu', 'score_pos', 'sentimiento_generado']] = df_gen['Answer_generated'].apply(get_sentiment_score)\n","\n","# Save the updated file with sentiment scores\n","df_gen.to_csv(\"/content/CDMX_Answers_generated_sentimient.csv\", index=False)\n"],"metadata":{"id":"VX85kjE07bYp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","\n","# Load real and generated responses (with sentiment scores)\n","df_real = pd.read_csv(\"/content/CDMX_Answers_real_sentimient.csv\")\n","df_gen = pd.read_csv(\"/content/CDMX_Answers_generated_sentimient.csv\")\n","\n","# Group by 'pregunta' and calculate average sentiment\n","avg_sent_real = df_real.groupby(\"Number\")[\"sentimiento_real\"].mean().reset_index()\n","avg_sent_real.rename(columns={\"sentimiento_real\": \"avg_sentimiento_real\"}, inplace=True)\n","\n","avg_sent_gen = df_gen.groupby(\"Number\")[\"sentimiento_generado\"].mean().reset_index()\n","avg_sent_gen.rename(columns={\"sentimiento_generado\": \"avg_sentimiento_generado\"}, inplace=True)\n","\n","# Merge both results on the question\n","merged_avg = pd.merge(avg_sent_real, avg_sent_gen, on=\"Number\")\n","\n","# Display or export results\n","print(merged_avg)\n","merged_avg.to_csv(\"/content/avg_sentimiento_comparado.csv\", index=False)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UjVK04Mm8mwK","executionInfo":{"status":"ok","timestamp":1753565726295,"user_tz":-180,"elapsed":6,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"a205b0d3-7ba2-4b92-9306-9b14d67bca29"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["   Number  avg_sentimiento_real  avg_sentimiento_generado\n","0     1.0             -0.040012                 -0.118984\n","1     2.0             -0.110049                 -0.230552\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","\n","# Load both real and generated datasets\n","df_real = pd.read_csv(\"/content/CDMX_Answers_real_sentimient.csv\")\n","df_gen = pd.read_csv(\"/content/CDMX_Answers_generated_sentimient.csv\")\n","\n","# Add a column to indicate source\n","df_real[\"tipo\"] = \"real\"\n","df_gen[\"tipo\"] = \"generada\"\n","\n","# Standardize sentiment column names\n","df_real.rename(columns={\"sentimiento_real\": \"sentimiento\"}, inplace=True)\n","df_gen.rename(columns={\"sentimiento_generado\": \"sentimiento\"}, inplace=True)\n","\n","# Standardize answer column names (optional)\n","df_real.rename(columns={\"Answer\": \"respuesta\"}, inplace=True)\n","df_gen.rename(columns={\"Answer_generated\": \"respuesta\"}, inplace=True)\n","\n","# Select only relevant columns\n","cols = [\"Number\", \"respuesta\", \"sentimiento\", \"tipo\"]\n","df_combined = pd.concat([df_real[cols], df_gen[cols]], ignore_index=True)\n","\n","# Compute average sentiment per question and type\n","avg_by_group = df_combined.groupby([\"Number\", \"tipo\"])[\"sentimiento\"].mean().reset_index()\n","avg_by_group.rename(columns={\"sentimiento\": \"avg_sentimiento\"}, inplace=True)\n","\n","# Merge the average back to each row\n","df_final = pd.merge(df_combined, avg_by_group, on=[\"Number\", \"tipo\"], how=\"left\")\n","\n","# Save the final combined file\n","df_final.to_csv(\"/content/CDMX_Sentiment_Comparation.csv\", index=False)\n"],"metadata":{"id":"x3t5hlFIGrpF"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["STADISTICAL TEST"],"metadata":{"id":"Ps4Sr5-DPUAQ"}},{"cell_type":"code","source":["import pandas as pd\n","from scipy.stats import ttest_rel\n","\n","# Load the CSV file\n","df = pd.read_csv('/content/CDMX_Sentiment_Comparation.csv')\n","\n","# Initialize a list to collect results for each question\n","results = []\n","\n","# Loop over each unique question number\n","for q_num in sorted(df['Number'].dropna().unique()):\n","    # Filter data for the current question\n","    q_data = df[df['Number'] == q_num]\n","\n","    # Separate real and generated sentiment values\n","    real_q = q_data[q_data['tipo'] == 'real']['sentimiento'].reset_index(drop=True)\n","    gen_q = q_data[q_data['tipo'] == 'generada']['sentimiento'].reset_index(drop=True)\n","\n","    # Make sure we compare only pairs of responses\n","    min_len = min(len(real_q), len(gen_q))\n","    if min_len == 0:\n","        continue  # Skip questions that don't have both real and generated responses\n","\n","    real_q = real_q[:min_len]\n","    gen_q = gen_q[:min_len]\n","\n","    # Perform paired t-test\n","    t_stat, p_val = ttest_rel(real_q, gen_q)\n","\n","    # Save the results\n","    results.append({\n","        \"Question (Number)\": int(q_num),\n","        \"N pairs\": min_len,\n","        \"Mean Real\": real_q.mean(),\n","        \"Mean Generated\": gen_q.mean(),\n","        \"Mean Difference\": gen_q.mean() - real_q.mean(),\n","        \"t-statistic\": t_stat,\n","        \"p-value\": p_val,\n","        \"Significant (p < 0.05)\": p_val < 0.05\n","    })\n","\n","# Convert the list of results to a DataFrame\n","results_df = pd.DataFrame(results)\n","\n","# Display the result\n","results_df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":125},"id":"Z_vs_c_7TAtt","executionInfo":{"status":"ok","timestamp":1753565726355,"user_tz":-180,"elapsed":44,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"239591cd-abd6-4344-d95c-38febc415c7a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Question (Number)  N pairs  Mean Real  Mean Generated  Mean Difference  \\\n","0                  1       20  -0.040012       -0.118984        -0.078973   \n","1                  2       20  -0.110049       -0.230552        -0.120503   \n","\n","   t-statistic   p-value  Significant (p < 0.05)  \n","0     4.224365  0.000459                    True  \n","1     2.612867  0.017109                    True  "],"text/html":["\n","  <div id=\"df-500655f4-0d2c-4dc5-8293-1c5b6d0d4a0f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Question (Number)</th>\n","      <th>N pairs</th>\n","      <th>Mean Real</th>\n","      <th>Mean Generated</th>\n","      <th>Mean Difference</th>\n","      <th>t-statistic</th>\n","      <th>p-value</th>\n","      <th>Significant (p &lt; 0.05)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>-0.040012</td>\n","      <td>-0.118984</td>\n","      <td>-0.078973</td>\n","      <td>4.224365</td>\n","      <td>0.000459</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>20</td>\n","      <td>-0.110049</td>\n","      <td>-0.230552</td>\n","      <td>-0.120503</td>\n","      <td>2.612867</td>\n","      <td>0.017109</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-500655f4-0d2c-4dc5-8293-1c5b6d0d4a0f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-500655f4-0d2c-4dc5-8293-1c5b6d0d4a0f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-500655f4-0d2c-4dc5-8293-1c5b6d0d4a0f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-0bd35428-5ca7-43b2-931d-ee7e1b332127\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0bd35428-5ca7-43b2-931d-ee7e1b332127')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-0bd35428-5ca7-43b2-931d-ee7e1b332127 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_aaa74e84-7db6-462d-a5fa-18761a7ae01e\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('results_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_aaa74e84-7db6-462d-a5fa-18761a7ae01e button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('results_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"results_df","summary":"{\n  \"name\": \"results_df\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"Question (Number)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 2,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"N pairs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 20,\n        \"max\": 20,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Real\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.049523951017191516,\n        \"min\": -0.11004898250102994,\n        \"max\": -0.040011539310216865,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -0.11004898250102994\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Generated\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07889013811873377,\n        \"min\": -0.23055163421499997,\n        \"max\": -0.11898413094999997,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -0.23055163421499997\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Difference\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.02936618710154226,\n        \"min\": -0.12050265171397002,\n        \"max\": -0.07897259163978311,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -0.12050265171397002\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"t-statistic\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1395008616624067,\n        \"min\": 2.612867007255842,\n        \"max\": 4.224364580154646,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2.612867007255842\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"p-value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.011773008109297359,\n        \"min\": 0.0004590806378235913,\n        \"max\": 0.017108628375920348,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.017108628375920348\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Significant (p < 0.05)\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["from scipy.stats import wilcoxon\n","\n","# Initialize a list to collect Wilcoxon results\n","wilcoxon_results = []\n","\n","# Loop over each unique question number\n","for q_num in sorted(df['Number'].dropna().unique()):\n","    # Filter data for the current question\n","    q_data = df[df['Number'] == q_num]\n","\n","    # Separate real and generated sentiment values\n","    real_q = q_data[q_data['tipo'] == 'real']['sentimiento'].reset_index(drop=True)\n","    gen_q = q_data[q_data['tipo'] == 'generada']['sentimiento'].reset_index(drop=True)\n","\n","    # Match the length for paired comparison\n","    min_len = min(len(real_q), len(gen_q))\n","    if min_len == 0:\n","        continue  # Skip questions with missing pairs\n","\n","    real_q = real_q[:min_len]\n","    gen_q = gen_q[:min_len]\n","\n","    # Perform Wilcoxon signed-rank test\n","    try:\n","        stat, p_val = wilcoxon(real_q, gen_q)\n","    except ValueError:\n","        # If all differences are zero or the sample is too small, skip\n","        continue\n","\n","    # Store the result\n","    wilcoxon_results.append({\n","        \"Question (Number)\": int(q_num),\n","        \"N pairs\": min_len,\n","        \"Mean Real\": real_q.mean(),\n","        \"Mean Generated\": gen_q.mean(),\n","        \"Mean Difference\": gen_q.mean() - real_q.mean(),\n","        \"Wilcoxon statistic\": stat,\n","        \"p-value\": p_val,\n","        \"Significant (p < 0.05)\": p_val < 0.05\n","    })\n","\n","# Convert to DataFrame\n","wilcoxon_df = pd.DataFrame(wilcoxon_results)\n","\n","# Display the result\n","wilcoxon_df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":125},"id":"80bZ9xmhYKnP","executionInfo":{"status":"ok","timestamp":1753565726397,"user_tz":-180,"elapsed":37,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"08a1cc5e-5eb0-435e-f1b9-da95422d3f25"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Question (Number)  N pairs  Mean Real  Mean Generated  Mean Difference  \\\n","0                  1       20  -0.040012       -0.118984        -0.078973   \n","1                  2       20  -0.110049       -0.230552        -0.120503   \n","\n","   Wilcoxon statistic   p-value  Significant (p < 0.05)  \n","0                11.0  0.000105                    True  \n","1                36.0  0.008308                    True  "],"text/html":["\n","  <div id=\"df-0c6dc66c-72bd-415b-a076-9ab5308f43a7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Question (Number)</th>\n","      <th>N pairs</th>\n","      <th>Mean Real</th>\n","      <th>Mean Generated</th>\n","      <th>Mean Difference</th>\n","      <th>Wilcoxon statistic</th>\n","      <th>p-value</th>\n","      <th>Significant (p &lt; 0.05)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>-0.040012</td>\n","      <td>-0.118984</td>\n","      <td>-0.078973</td>\n","      <td>11.0</td>\n","      <td>0.000105</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>20</td>\n","      <td>-0.110049</td>\n","      <td>-0.230552</td>\n","      <td>-0.120503</td>\n","      <td>36.0</td>\n","      <td>0.008308</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0c6dc66c-72bd-415b-a076-9ab5308f43a7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0c6dc66c-72bd-415b-a076-9ab5308f43a7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0c6dc66c-72bd-415b-a076-9ab5308f43a7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-1f50c678-e26c-48b8-a40f-0e938067e255\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1f50c678-e26c-48b8-a40f-0e938067e255')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-1f50c678-e26c-48b8-a40f-0e938067e255 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_65e8d997-8850-4640-a5f9-2beee8cc3b90\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('wilcoxon_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_65e8d997-8850-4640-a5f9-2beee8cc3b90 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('wilcoxon_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"wilcoxon_df","summary":"{\n  \"name\": \"wilcoxon_df\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"Question (Number)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 2,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"N pairs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 20,\n        \"max\": 20,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Real\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.049523951017191516,\n        \"min\": -0.11004898250102994,\n        \"max\": -0.040011539310216865,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -0.11004898250102994\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Generated\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07889013811873377,\n        \"min\": -0.23055163421499997,\n        \"max\": -0.11898413094999997,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -0.23055163421499997\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Difference\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.02936618710154226,\n        \"min\": -0.12050265171397002,\n        \"max\": -0.07897259163978311,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -0.12050265171397002\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Wilcoxon statistic\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.67766952966369,\n        \"min\": 11.0,\n        \"max\": 36.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          36.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"p-value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.005800755054251368,\n        \"min\": 0.0001049041748046875,\n        \"max\": 0.00830841064453125,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.00830841064453125\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Significant (p < 0.05)\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["from scipy.stats import ks_2samp\n","\n","# Initialize a list to collect KS test results\n","ks_results = []\n","\n","# Loop through each unique question\n","for q_num in sorted(df['Number'].dropna().unique()):\n","    # Filter data for the current question\n","    q_data = df[df['Number'] == q_num]\n","\n","    # Separate sentiment values\n","    real_q = q_data[q_data['tipo'] == 'real']['sentimiento'].reset_index(drop=True)\n","    gen_q = q_data[q_data['tipo'] == 'generada']['sentimiento'].reset_index(drop=True)\n","\n","    # Perform K-S test only if both have values\n","    if len(real_q) > 0 and len(gen_q) > 0:\n","        ks_stat, p_val = ks_2samp(real_q, gen_q)\n","        ks_results.append({\n","            \"Question (Number)\": int(q_num),\n","            \"N Real\": len(real_q),\n","            \"N Generated\": len(gen_q),\n","            \"Mean Real\": real_q.mean(),\n","            \"Mean Generated\": gen_q.mean(),\n","            \"K-S statistic\": ks_stat,\n","            \"p-value\": p_val,\n","            \"Significant (p < 0.05)\": p_val < 0.05\n","        })\n","\n","# Convert results to DataFrame\n","ks_df = pd.DataFrame(ks_results)\n","\n","# Display the table\n","ks_df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":125},"id":"ZIeqaBwSZGHe","executionInfo":{"status":"ok","timestamp":1753565726432,"user_tz":-180,"elapsed":7,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"789bac50-2463-4688-b8d0-c762c2ebc4b5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Question (Number)  N Real  N Generated  Mean Real  Mean Generated  \\\n","0                  1      20           20  -0.040012       -0.118984   \n","1                  2      20           20  -0.110049       -0.230552   \n","\n","   K-S statistic   p-value  Significant (p < 0.05)  \n","0           0.75  0.000010                    True  \n","1           0.50  0.012299                    True  "],"text/html":["\n","  <div id=\"df-afca79a3-40f4-4d5d-99f8-bb8b86cde936\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Question (Number)</th>\n","      <th>N Real</th>\n","      <th>N Generated</th>\n","      <th>Mean Real</th>\n","      <th>Mean Generated</th>\n","      <th>K-S statistic</th>\n","      <th>p-value</th>\n","      <th>Significant (p &lt; 0.05)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>20</td>\n","      <td>20</td>\n","      <td>-0.040012</td>\n","      <td>-0.118984</td>\n","      <td>0.75</td>\n","      <td>0.000010</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>20</td>\n","      <td>20</td>\n","      <td>-0.110049</td>\n","      <td>-0.230552</td>\n","      <td>0.50</td>\n","      <td>0.012299</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-afca79a3-40f4-4d5d-99f8-bb8b86cde936')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-afca79a3-40f4-4d5d-99f8-bb8b86cde936 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-afca79a3-40f4-4d5d-99f8-bb8b86cde936');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-1d0ee910-e5fe-40b9-b612-07890e4760b9\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1d0ee910-e5fe-40b9-b612-07890e4760b9')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-1d0ee910-e5fe-40b9-b612-07890e4760b9 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_69eb8bde-57a8-45d1-b354-1429cf38767a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('ks_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_69eb8bde-57a8-45d1-b354-1429cf38767a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('ks_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"ks_df","summary":"{\n  \"name\": \"ks_df\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"Question (Number)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 2,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"N Real\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 20,\n        \"max\": 20,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"N Generated\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 20,\n        \"max\": 20,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Real\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.049523951017191516,\n        \"min\": -0.11004898250102994,\n        \"max\": -0.040011539310216865,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -0.11004898250102994\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Generated\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07889013811873377,\n        \"min\": -0.23055163421499997,\n        \"max\": -0.11898413094999997,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -0.23055163421499997\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"K-S statistic\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1767766952966369,\n        \"min\": 0.5,\n        \"max\": 0.75,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"p-value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.008689681633536941,\n        \"min\": 9.54696510144592e-06,\n        \"max\": 0.012298612583953778,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.012298612583953778\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Significant (p < 0.05)\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","# Set style for consistency\n","sns.set(style=\"whitegrid\")\n","\n","# Loop through each question\n","question_numbers = sorted(df['Number'].dropna().unique())\n","\n","for q_num in question_numbers:\n","    q_data = df[df['Number'] == q_num].copy()\n","\n","    if q_data['tipo'].nunique() < 2:\n","        continue\n","\n","    # Rename labels for clarity\n","    q_data['tipo'] = q_data['tipo'].replace({'real': 'Dataset', 'generada': 'Model'})\n","\n","    plt.figure(figsize=(6, 5))\n","\n","    # Boxplot\n","    ax = sns.boxplot(\n","        data=q_data,\n","        x='tipo',\n","        y='sentimiento',\n","        order=['Model', 'Dataset'], # Specify the order here\n","        palette='pastel', # Use pastel palette\n","        linewidth=2.5\n","    )\n","\n","    # Stripplot\n","    sns.stripplot(\n","        data=q_data,\n","        x='tipo',\n","        y='sentimiento',\n","        order=['Model', 'Dataset'], # Specify the order here\n","        color='black',\n","        alpha=0.4\n","    )\n","\n","    # Calculate and add average sentiment text to the side\n","    avg_sentiment_model = q_data[q_data['tipo'] == 'Model']['sentimiento'].mean()\n","    avg_sentiment_dataset = q_data[q_data['tipo'] == 'Dataset']['sentimiento'].mean()\n","\n","\n","    ax.text(0, ax.get_ylim()[1] * 0.75, f'Model Avg: {avg_sentiment_model:.2f}', # Adjusted y-coordinate\n","            horizontalalignment='center', size='small', color='black', weight='semibold')\n","    ax.text(1, ax.get_ylim()[1] * 0.75, f'Dataset Avg: {avg_sentiment_dataset:.2f}', # Adjusted y-coordinate\n","            horizontalalignment='center', size='small', color='black', weight='semibold')\n","\n","\n","    plt.title(f'CDMX: Sentiment Distribution - Question {int(q_num)}')\n","    plt.xlabel('Response Type')\n","    plt.ylabel('Sentiment Score')\n","    plt.grid(True)\n","    plt.show()"],"metadata":{"id":"3WAqsp3jeeX0","executionInfo":{"status":"ok","timestamp":1753567294081,"user_tz":-180,"elapsed":314,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"bb68ca39-38b8-4983-cc4c-ccce99f335f1","colab":{"base_uri":"https://localhost:8080/","height":1000}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-33-593607136.py:22: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  ax = sns.boxplot(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 600x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-33-593607136.py:22: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  ax = sns.boxplot(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 600x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["COMPARATION VS FULL CORPUS"],"metadata":{"id":"G5-WA_da5vuf"}},{"cell_type":"code","source":["import pandas as pd\n","import torch\n","from transformers import AutoTokenizer, AutoModelForSequenceClassification\n","from torch.nn.functional import softmax\n","from tqdm import tqdm\n","\n","# Load corpus file\n","df_corpus = pd.read_csv(\"/content/base_CDMX_C-D+_18-25.csv\", encoding='ISO-8859-1')\n","\n","# Load model and tokenizer\n","model_name = \"cardiffnlp/twitter-roberta-base-sentiment\"\n","tokenizer = AutoTokenizer.from_pretrained(model_name)\n","model = AutoModelForSequenceClassification.from_pretrained(model_name)\n","\n","# Function to get sentiment score from text using same logic as your image\n","def get_sentiment_score(text):\n","    try:\n","        if pd.isna(text) or text.strip() == \"\":\n","            return pd.Series([0.0, 1.0, 0.0, 0.0], index=['score_neg', 'score_neu', 'score_pos', 'sentiment_score'])\n","\n","        encoded_input = tokenizer(text, return_tensors='pt', truncation=True, max_length=512)\n","        with torch.no_grad():\n","            output = model(**encoded_input)\n","        scores = softmax(output.logits[0], dim=0).numpy()\n","        sentiment_score = scores[2] - scores[0]  # positive - negative\n","        return pd.Series([scores[0], scores[1], scores[2], sentiment_score], index=['score_neg', 'score_neu', 'score_pos', 'sentiment_score'])\n","    except:\n","        return pd.Series([None, None, None, None], index=['score_neg', 'score_neu', 'score_pos', 'sentiment_score'])\n"],"metadata":{"id":"UE0XBtrLQxVl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Apply to the \"Participación\" column with progress bar\n","tqdm.pandas()\n","scores_df = df_corpus['Participación'].astype(str).progress_apply(get_sentiment_score)\n","\n","# Combine with original DataFrame\n","df_corpus_sentiment = pd.concat([df_corpus.reset_index(drop=True), scores_df], axis=1)\n","\n","# Drop rows with errors\n","df_corpus_sentiment = df_corpus_sentiment.dropna(subset=['sentiment_score'])\n","\n","# Save to file if needed\n","# df_corpus_sentiment.to_csv(\"/content/base_CDMX_C-D+_18-25_sentiment.csv\", index=False)\n","\n","# Quick check\n","df_corpus_sentiment[['Participación', 'sentiment_score']].head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":224},"id":"F1nkAt1x6KAy","executionInfo":{"status":"ok","timestamp":1753566284565,"user_tz":-180,"elapsed":467908,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"1359499a-9ab5-4d6f-c669-b10b3998a303"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["100%|██████████| 4376/4376 [07:47<00:00,  9.35it/s]\n"]},{"output_type":"execute_result","data":{"text/plain":["                                       Participación  sentiment_score\n","0                                                 sí        -0.065402\n","1                 Muy buenas tardes me escucha bien.        -0.044646\n","2                                  Bien, estoy bien.         0.030562\n","3  Disculpense disculpa si me si me retrasé es qu...        -0.143344\n","4                          Se escucha perfecto todo.         0.095203"],"text/html":["\n","  <div id=\"df-442cb1ee-fd6d-4c11-ae88-35b103ced8a3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Participación</th>\n","      <th>sentiment_score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>sí</td>\n","      <td>-0.065402</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Muy buenas tardes me escucha bien.</td>\n","      <td>-0.044646</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Bien, estoy bien.</td>\n","      <td>0.030562</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Disculpense disculpa si me si me retrasé es qu...</td>\n","      <td>-0.143344</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Se escucha perfecto todo.</td>\n","      <td>0.095203</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-442cb1ee-fd6d-4c11-ae88-35b103ced8a3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-442cb1ee-fd6d-4c11-ae88-35b103ced8a3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-442cb1ee-fd6d-4c11-ae88-35b103ced8a3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-78a9fcf3-3c91-4897-bed3-2181c1ab3b0e\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-78a9fcf3-3c91-4897-bed3-2181c1ab3b0e')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-78a9fcf3-3c91-4897-bed3-2181c1ab3b0e button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df_corpus_sentiment[['Participaci\\u00f3n', 'sentiment_score']]\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Participaci\\u00f3n\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Muy\\u00a0buenas\\u00a0tardes\\u00a0me\\u00a0escucha\\u00a0bien.\",\n          \"Se\\u00a0escucha\\u00a0perfecto\\u00a0todo.\",\n          \"Bien,\\u00a0estoy\\u00a0bien.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sentiment_score\",\n      \"properties\": {\n        \"dtype\": \"float32\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          -0.04464574158191681,\n          0.09520267695188522,\n          0.03056233376264572\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["# Calculate and print the average sentiment score of the corpus\n","avg_sentiment = df_corpus_sentiment[\"sentiment_score\"].mean()\n","print(f\"Average Sentiment Score (Corpus - Recalculated): {avg_sentiment:.3f}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iS5tTHDw-nEm","executionInfo":{"status":"ok","timestamp":1753566309306,"user_tz":-180,"elapsed":44,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"d0dea283-2d60-46e3-ec46-90af354ceb52"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Average Sentiment Score (Corpus - Recalculated): -0.042\n"]}]},{"cell_type":"code","source":["from scipy.stats import ttest_ind, ks_2samp\n","\n","# Load generated sentiment scores\n","df_generated = pd.read_csv(\"/content/CDMX_Sentiment_Comparation.csv\", encoding='ISO-8859-1')\n","sent_gen = df_generated[df_generated[\"tipo\"] == \"generada\"][\"sentimiento\"].dropna()\n","\n","# Load recalculated corpus sentiment scores\n","# (assuming you already have df_corpus_sentiment from the previous step)\n","sent_corpus = df_corpus_sentiment[\"sentiment_score\"].dropna()\n","\n","# Perform t-test\n","t_stat, p_val_t = ttest_ind(sent_gen, sent_corpus)\n","\n","# Perform K-S test\n","ks_stat, p_val_ks = ks_2samp(sent_gen, sent_corpus)\n","\n","# Print results\n","print(f\"Average Sentiment - Corpus (Recalculated): {sent_corpus.mean():.3f}\")\n","print(f\"Average Sentiment - Generated: {sent_gen.mean():.3f}\")\n","print(f\"\\nT-test p-value: {p_val_t:.5f}\")\n","print(f\"K-S test p-value: {p_val_ks:.5f}\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Is8X_pmQAZU4","executionInfo":{"status":"ok","timestamp":1753566309311,"user_tz":-180,"elapsed":3,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"d8941658-7adc-46ef-c9a3-fe3d2879f694"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Average Sentiment - Corpus (Recalculated): -0.042\n","Average Sentiment - Generated: -0.140\n","\n","T-test p-value: 0.00000\n","K-S test p-value: 0.00000\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","import pandas as pd\n","\n","# Combine the two series into a single DataFrame for plotting\n","df_plot = pd.DataFrame({\n","    \"Sentiment\": pd.concat([sent_corpus, sent_gen], ignore_index=True),\n","    \"Source\": [\"Full Corpus\"] * len(sent_corpus) + [\"Model\"] * len(sent_gen)\n","})\n","\n","# Set style\n","sns.set(style=\"whitegrid\")\n","\n","# Plot boxplot\n","plt.figure(figsize=(6, 5))\n","ax = sns.boxplot(data=df_plot, x=\"Source\", y=\"Sentiment\", palette='pastel', linewidth=2.5, order=[\"Model\", \"Full Corpus\"])\n","\n","# Add stripplot\n","sns.stripplot(data=df_plot, x=\"Source\", y=\"Sentiment\", color='black', alpha=0.4, order=[\"Model\", \"Full Corpus\"])\n","\n","# Calculate and add average sentiment text to the side\n","avg_sentiment_model = df_plot[df_plot['Source'] == 'Model']['Sentiment'].mean()\n","avg_sentiment_corpus = df_plot[df_plot['Source'] == 'Full Corpus']['Sentiment'].mean()\n","\n","ax.text(0, ax.get_ylim()[1] * 0.95, f'Model Avg: {avg_sentiment_model:.2f}',\n","        horizontalalignment='center', size='small', color='black', weight='semibold')\n","ax.text(1, ax.get_ylim()[1] * 0.95, f'Corpus Avg: {avg_sentiment_corpus:.2f}',\n","        horizontalalignment='center', size='small', color='black', weight='semibold')\n","\n","\n","plt.title(\"CDMX: Sentiment Distribution - Corpus vs Generated\")\n","plt.xlabel(\"Response Source\")\n","plt.ylabel(\"Sentiment Score (-1 to 1)\")\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":587},"id":"R8meAedxA30p","executionInfo":{"status":"ok","timestamp":1753567380634,"user_tz":-180,"elapsed":259,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"333b1d3a-03de-452a-f930-485d8bc89b50"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-34-1844248157.py:16: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  ax = sns.boxplot(data=df_plot, x=\"Source\", y=\"Sentiment\", palette='pastel', linewidth=2.5, order=[\"Model\", \"Full Corpus\"])\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 600x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}