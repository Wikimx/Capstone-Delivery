{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1kMAAMDjBNsVd1RcIiyNu218i44IjuAf2","timestamp":1753448529695},{"file_id":"1ZACVnpUdecrrJmBoIZtshLQGM3-GahOV","timestamp":1752525487690}],"machine_shape":"hm","gpuType":"T4","authorship_tag":"ABX9TyNav7xDCjYGwBmENbKb3BNY"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"6463af302b004ba5aa2dd9bf287f523c":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_4a0ea1455b8a454b8f22261950307d30","IPY_MODEL_0844dd2abbcd43a5a4fcc697632745ec","IPY_MODEL_a84d9c04157947d5a01a33caf74556b4"],"layout":"IPY_MODEL_871660f90ed643b78b1364effc4a5924"}},"4a0ea1455b8a454b8f22261950307d30":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_6a321fd47baa4ab59d96212e1223d18d","placeholder":"​","style":"IPY_MODEL_92c44e48a4ab43e58e9c0ce880c3b650","value":"config.json: 100%"}},"0844dd2abbcd43a5a4fcc697632745ec":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_b967e82e3c9046f1947e84118e3bd39a","max":747,"min":0,"orientation":"horizontal","style":"IPY_MODEL_e832a1c33f0d4010bd8f06591a511f65","value":747}},"a84d9c04157947d5a01a33caf74556b4":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_5222b5f55f7d497bb6050c6bcc3250e8","placeholder":"​","style":"IPY_MODEL_d01d42b2f2f44e9ca8c95350510937a1","value":" 747/747 [00:00&lt;00:00, 95.8kB/s]"}},"871660f90ed643b78b1364effc4a5924":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6a321fd47baa4ab59d96212e1223d18d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"92c44e48a4ab43e58e9c0ce880c3b650":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b967e82e3c9046f1947e84118e3bd39a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e832a1c33f0d4010bd8f06591a511f65":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"5222b5f55f7d497bb6050c6bcc3250e8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d01d42b2f2f44e9ca8c95350510937a1":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"2a06d2568a2d4187924cd02313399be1":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_cc1384c0615b4e9aa12df643da227152","IPY_MODEL_621de63432c0449993f42c711e6e8a5a","IPY_MODEL_635b3a959ba34b3b88c920515ce34a93"],"layout":"IPY_MODEL_21e8ff6cd3c94f4489d53ea7a9e6380f"}},"cc1384c0615b4e9aa12df643da227152":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c2f2da49af5c4956bd0bf76df4ff0b8f","placeholder":"​","style":"IPY_MODEL_42c5a581dedd4a8bab5bf5ecf5249754","value":"vocab.json: "}},"621de63432c0449993f42c711e6e8a5a":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_7e09314865d945529fd49bc6279c5f42","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_d6ccd8dc53bd441590fe144ccf51e516","value":1}},"635b3a959ba34b3b88c920515ce34a93":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_3477b0caaa654c3c8fcec9ac1e412bf7","placeholder":"​","style":"IPY_MODEL_f43ddc6acc514be89b48ee0209a04277","value":" 899k/? [00:00&lt;00:00, 14.1MB/s]"}},"21e8ff6cd3c94f4489d53ea7a9e6380f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c2f2da49af5c4956bd0bf76df4ff0b8f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"42c5a581dedd4a8bab5bf5ecf5249754":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"7e09314865d945529fd49bc6279c5f42":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"20px"}},"d6ccd8dc53bd441590fe144ccf51e516":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"3477b0caaa654c3c8fcec9ac1e412bf7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f43ddc6acc514be89b48ee0209a04277":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e870cd5941024143af74aec82e2dc2aa":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_787ce3fdf251427a91c6f82d9a0009df","IPY_MODEL_eba83943dc7a48c5b41a3351b8006162","IPY_MODEL_233c5d0682d64d8ebfae6d14415761b6"],"layout":"IPY_MODEL_aec8163bfcf64c448a387e0d46b7d01f"}},"787ce3fdf251427a91c6f82d9a0009df":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4aa7f324ab51440d8b4e052263a2a218","placeholder":"​","style":"IPY_MODEL_7fa4b5f0388745b0af52809d56f1c60f","value":"merges.txt: "}},"eba83943dc7a48c5b41a3351b8006162":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_997c2ef409034db5887f0e772a043085","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_9e0849999e784192b1aeeb2b11205426","value":1}},"233c5d0682d64d8ebfae6d14415761b6":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ca0cade501564e2ea5c1dd0b279fe312","placeholder":"​","style":"IPY_MODEL_23f2ff6ba05147718ab68b50c0656484","value":" 456k/? [00:00&lt;00:00, 37.2MB/s]"}},"aec8163bfcf64c448a387e0d46b7d01f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4aa7f324ab51440d8b4e052263a2a218":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7fa4b5f0388745b0af52809d56f1c60f":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"997c2ef409034db5887f0e772a043085":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"20px"}},"9e0849999e784192b1aeeb2b11205426":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"ca0cade501564e2ea5c1dd0b279fe312":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"23f2ff6ba05147718ab68b50c0656484":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"95d25b473f0e4f83aae8fc48e181bc57":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_1b5fb05b06634291b6454e0d225e59c0","IPY_MODEL_b2e8a3db224a4df1813084b77b0fa55c","IPY_MODEL_3686d6ab10574a7993431c449a904d7f"],"layout":"IPY_MODEL_3adee5cb7280443b92b5bea3c4452d7c"}},"1b5fb05b06634291b6454e0d225e59c0":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c97903d436bd40ef9eea925420bcac37","placeholder":"​","style":"IPY_MODEL_b284bd0227d74a04b6572bbbb37e9f63","value":"special_tokens_map.json: 100%"}},"b2e8a3db224a4df1813084b77b0fa55c":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_d0ae714edc0a4087ac88cf5efb43aca8","max":150,"min":0,"orientation":"horizontal","style":"IPY_MODEL_4781596e282f4043b58cb95b7f39dfde","value":150}},"3686d6ab10574a7993431c449a904d7f":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b3848dac9e1b48e782212482aa3f2f67","placeholder":"​","style":"IPY_MODEL_ae74782f35e544eea616b57a470b14e4","value":" 150/150 [00:00&lt;00:00, 19.3kB/s]"}},"3adee5cb7280443b92b5bea3c4452d7c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c97903d436bd40ef9eea925420bcac37":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b284bd0227d74a04b6572bbbb37e9f63":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d0ae714edc0a4087ac88cf5efb43aca8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4781596e282f4043b58cb95b7f39dfde":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"b3848dac9e1b48e782212482aa3f2f67":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ae74782f35e544eea616b57a470b14e4":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d623aa2bc2a14872b0bfdc06b1980e98":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_28a8ae9930f44121b6d444ef2c635dfb","IPY_MODEL_56d5abfd6b424d56ad3308bfa691e570","IPY_MODEL_c5a544308e5249308e620cf43d2f05e2"],"layout":"IPY_MODEL_d111dc61648f4a43bfcfce252b18420b"}},"28a8ae9930f44121b6d444ef2c635dfb":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e7de2235f36a426d9ebfc278898a53b4","placeholder":"​","style":"IPY_MODEL_674f648e93c64f8b92b38ce0e1948fa1","value":"pytorch_model.bin: 100%"}},"56d5abfd6b424d56ad3308bfa691e570":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_5f4d890f483f4388bbe9d5398c73bca0","max":498679497,"min":0,"orientation":"horizontal","style":"IPY_MODEL_a0a7e9b6c54a485999452facafc97387","value":498679497}},"c5a544308e5249308e620cf43d2f05e2":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_2df0d215967c478ea6606b02185a65c5","placeholder":"​","style":"IPY_MODEL_13f3853d29084dbeb25887196e4bd766","value":" 499M/499M [00:02&lt;00:00, 395MB/s]"}},"d111dc61648f4a43bfcfce252b18420b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e7de2235f36a426d9ebfc278898a53b4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"674f648e93c64f8b92b38ce0e1948fa1":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"5f4d890f483f4388bbe9d5398c73bca0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a0a7e9b6c54a485999452facafc97387":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"2df0d215967c478ea6606b02185a65c5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"13f3853d29084dbeb25887196e4bd766":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"9045d7f0f79946fd9eae490d9cd46485":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_c021b54fd7aa4543884e96c587efe32c","IPY_MODEL_23827bf8f8c7411ba012ba2942c12d52","IPY_MODEL_0c74242c8a9d467a98e8b0cc4ad7a9b2"],"layout":"IPY_MODEL_07dfbadfda554e9ea7673a879febafcf"}},"c021b54fd7aa4543884e96c587efe32c":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_25fa6ce352754b59868ef2adf5c04043","placeholder":"​","style":"IPY_MODEL_4bc55cb46d704ad9a757bbfccc03f960","value":"model.safetensors: 100%"}},"23827bf8f8c7411ba012ba2942c12d52":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_fc7d922abc1e4c5eba8f61e6ddd792db","max":498620100,"min":0,"orientation":"horizontal","style":"IPY_MODEL_375ca0043a4a4358a6db2dba3765d2b9","value":498620100}},"0c74242c8a9d467a98e8b0cc4ad7a9b2":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_893051c81885495ba60c40da7a09d572","placeholder":"​","style":"IPY_MODEL_ab989add744449119054aa6486d498e9","value":" 499M/499M [00:03&lt;00:00, 181MB/s]"}},"07dfbadfda554e9ea7673a879febafcf":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"25fa6ce352754b59868ef2adf5c04043":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4bc55cb46d704ad9a757bbfccc03f960":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"fc7d922abc1e4c5eba8f61e6ddd792db":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"375ca0043a4a4358a6db2dba3765d2b9":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"893051c81885495ba60c40da7a09d572":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ab989add744449119054aa6486d498e9":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"-OHbbJYAzHRy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1753578454075,"user_tz":-180,"elapsed":77827,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"cc81451d-9eee-4d72-859d-e894156633eb"},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m363.4/363.4 MB\u001b[0m \u001b[31m3.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.8/13.8 MB\u001b[0m \u001b[31m117.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m24.6/24.6 MB\u001b[0m \u001b[31m101.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m883.7/883.7 kB\u001b[0m \u001b[31m53.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m664.8/664.8 MB\u001b[0m \u001b[31m2.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m211.5/211.5 MB\u001b[0m \u001b[31m5.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m56.3/56.3 MB\u001b[0m \u001b[31m44.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m127.9/127.9 MB\u001b[0m \u001b[31m20.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m207.5/207.5 MB\u001b[0m \u001b[31m4.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m21.1/21.1 MB\u001b[0m \u001b[31m94.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h"]}],"source":["!pip install -q transformers\n","!pip install -q torch\n","!pip install -q sentencepiece"]},{"cell_type":"code","source":["import pandas as pd\n","from transformers import AutoTokenizer, AutoModelForSequenceClassification\n","from scipy.special import softmax\n","import torch\n","\n","df_mty = pd.read_csv(\"/content/MTY_Answers_Entrevistas.csv\")\n","df_cdmx = pd.read_csv(\"/content/CDMX_Answers_interview.csv\")\n","\n","# Load Model and tokenizer\n","MODEL = \"cardiffnlp/twitter-roberta-base-sentiment\"\n","tokenizer = AutoTokenizer.from_pretrained(MODEL)\n","model = AutoModelForSequenceClassification.from_pretrained(MODEL)\n"],"metadata":{"id":"KDmYEkag0dZd","colab":{"base_uri":"https://localhost:8080/","height":301,"referenced_widgets":["6463af302b004ba5aa2dd9bf287f523c","4a0ea1455b8a454b8f22261950307d30","0844dd2abbcd43a5a4fcc697632745ec","a84d9c04157947d5a01a33caf74556b4","871660f90ed643b78b1364effc4a5924","6a321fd47baa4ab59d96212e1223d18d","92c44e48a4ab43e58e9c0ce880c3b650","b967e82e3c9046f1947e84118e3bd39a","e832a1c33f0d4010bd8f06591a511f65","5222b5f55f7d497bb6050c6bcc3250e8","d01d42b2f2f44e9ca8c95350510937a1","2a06d2568a2d4187924cd02313399be1","cc1384c0615b4e9aa12df643da227152","621de63432c0449993f42c711e6e8a5a","635b3a959ba34b3b88c920515ce34a93","21e8ff6cd3c94f4489d53ea7a9e6380f","c2f2da49af5c4956bd0bf76df4ff0b8f","42c5a581dedd4a8bab5bf5ecf5249754","7e09314865d945529fd49bc6279c5f42","d6ccd8dc53bd441590fe144ccf51e516","3477b0caaa654c3c8fcec9ac1e412bf7","f43ddc6acc514be89b48ee0209a04277","e870cd5941024143af74aec82e2dc2aa","787ce3fdf251427a91c6f82d9a0009df","eba83943dc7a48c5b41a3351b8006162","233c5d0682d64d8ebfae6d14415761b6","aec8163bfcf64c448a387e0d46b7d01f","4aa7f324ab51440d8b4e052263a2a218","7fa4b5f0388745b0af52809d56f1c60f","997c2ef409034db5887f0e772a043085","9e0849999e784192b1aeeb2b11205426","ca0cade501564e2ea5c1dd0b279fe312","23f2ff6ba05147718ab68b50c0656484","95d25b473f0e4f83aae8fc48e181bc57","1b5fb05b06634291b6454e0d225e59c0","b2e8a3db224a4df1813084b77b0fa55c","3686d6ab10574a7993431c449a904d7f","3adee5cb7280443b92b5bea3c4452d7c","c97903d436bd40ef9eea925420bcac37","b284bd0227d74a04b6572bbbb37e9f63","d0ae714edc0a4087ac88cf5efb43aca8","4781596e282f4043b58cb95b7f39dfde","b3848dac9e1b48e782212482aa3f2f67","ae74782f35e544eea616b57a470b14e4","d623aa2bc2a14872b0bfdc06b1980e98","28a8ae9930f44121b6d444ef2c635dfb","56d5abfd6b424d56ad3308bfa691e570","c5a544308e5249308e620cf43d2f05e2","d111dc61648f4a43bfcfce252b18420b","e7de2235f36a426d9ebfc278898a53b4","674f648e93c64f8b92b38ce0e1948fa1","5f4d890f483f4388bbe9d5398c73bca0","a0a7e9b6c54a485999452facafc97387","2df0d215967c478ea6606b02185a65c5","13f3853d29084dbeb25887196e4bd766"]},"executionInfo":{"status":"ok","timestamp":1753578486014,"user_tz":-180,"elapsed":19804,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"bd8b13c7-c953-444f-ab8c-b6274499a63f"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/huggingface_hub/utils/_auth.py:94: UserWarning: \n","The secret `HF_TOKEN` does not exist in your Colab secrets.\n","To authenticate with the Hugging Face Hub, create a token in your settings tab (https://huggingface.co/settings/tokens), set it as secret in your Google Colab and restart your session.\n","You will be able to reuse this secret in all of your notebooks.\n","Please note that authentication is recommended but still optional to access public models or datasets.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["config.json:   0%|          | 0.00/747 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6463af302b004ba5aa2dd9bf287f523c"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["vocab.json: 0.00B [00:00, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2a06d2568a2d4187924cd02313399be1"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["merges.txt: 0.00B [00:00, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e870cd5941024143af74aec82e2dc2aa"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["special_tokens_map.json:   0%|          | 0.00/150 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"95d25b473f0e4f83aae8fc48e181bc57"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["pytorch_model.bin:   0%|          | 0.00/499M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d623aa2bc2a14872b0bfdc06b1980e98"}},"metadata":{}}]},{"cell_type":"code","source":["# Function to clasify sentiment\n","def get_sentiment_score(text):\n","    try:\n","        if pd.isna(text) or text.strip() == \"\":\n","            return pd.Series([0.0, 1.0, 0.0, 0.0], index=['score_neg', 'score_neu', 'score_pos', 'sentimiento_real'])\n","\n","        encoded_input = tokenizer(text, return_tensors='pt', truncation=True, max_length=512)\n","        with torch.no_grad():\n","            output = model(**encoded_input)\n","        scores = softmax(output.logits[0].numpy())\n","        sentiment_score = scores[2] - scores[0]  # positive - negative\n","        return pd.Series([scores[0], scores[1], scores[2], sentiment_score], index=['score_neg', 'score_neu', 'score_pos', 'sentimiento_real'])\n","\n","    except Exception as e:\n","        print(f\"Error procesando texto: {text[:30]}... — {str(e)}\")\n","        return pd.Series([0.0, 1.0, 0.0, 0.0], index=['score_neg', 'score_neu', 'score_pos', 'sentimiento_real'])\n"],"metadata":{"id":"zQBhcTKb0rxi","executionInfo":{"status":"ok","timestamp":1753578486027,"user_tz":-180,"elapsed":11,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["df_mty[['score_neg', 'score_neu', 'score_pos', 'sentimiento_real']] = df_mty['Answer'].apply(get_sentiment_score)\n","df_mty.to_csv(\"/content/MTY_Answers_entrevistas_sentimient.csv\", index=False)\n","\n","df_cdmx[['score_neg', 'score_neu', 'score_pos', 'sentimiento_real']] = df_cdmx['Answer'].apply(get_sentiment_score)\n","df_cdmx.to_csv(\"/content/CDMX_Answers_entrevistas_sentimient.csv\", index=False)"],"metadata":{"id":"82tge12V6Ada","colab":{"base_uri":"https://localhost:8080/","height":49,"referenced_widgets":["9045d7f0f79946fd9eae490d9cd46485","c021b54fd7aa4543884e96c587efe32c","23827bf8f8c7411ba012ba2942c12d52","0c74242c8a9d467a98e8b0cc4ad7a9b2","07dfbadfda554e9ea7673a879febafcf","25fa6ce352754b59868ef2adf5c04043","4bc55cb46d704ad9a757bbfccc03f960","fc7d922abc1e4c5eba8f61e6ddd792db","375ca0043a4a4358a6db2dba3765d2b9","893051c81885495ba60c40da7a09d572","ab989add744449119054aa6486d498e9"]},"executionInfo":{"status":"ok","timestamp":1753578496572,"user_tz":-180,"elapsed":10543,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"144ad952-5d02-4b4f-add0-fc986c4cc3c9"},"execution_count":4,"outputs":[{"output_type":"display_data","data":{"text/plain":["model.safetensors:   0%|          | 0.00/499M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"9045d7f0f79946fd9eae490d9cd46485"}},"metadata":{}}]},{"cell_type":"code","source":["# Load the file with generated answers\n","df_mty_gen = pd.read_csv(\"/content/MTY_Answers_generated.csv\", encoding='ISO-8859-1')\n","df_cdmx_gen = pd.read_csv(\"/content/CDMX_Answers_generated.csv\", encoding='ISO-8859-1')\n","\n","# Apply sentiment analysis to the 'Answer_generated' column\n","df_mty_gen[['score_neg', 'score_neu', 'score_pos', 'sentimiento_generado']] = df_mty_gen['Answer_generated'].apply(get_sentiment_score)\n","df_cdmx_gen[['score_neg', 'score_neu', 'score_pos', 'sentimiento_generado']] = df_cdmx_gen['Answer_generated'].apply(get_sentiment_score)\n","\n","# Save the updated file with sentiment scores\n","df_mty_gen.to_csv(\"/content/MTY_Answers_generated_sentimient.csv\", index=False)\n","df_cdmx_gen.to_csv(\"/content/CDMX_Answers_generated_sentimient.csv\", index=False)\n"],"metadata":{"id":"VX85kjE07bYp","executionInfo":{"status":"ok","timestamp":1753578539729,"user_tz":-180,"elapsed":43158,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","\n","# Load real and generated responses (with sentiment scores)\n","df_mty_int = pd.read_csv(\"/content/MTY_Answers_entrevistas_sentimient.csv\")\n","df_mty_gen = pd.read_csv(\"/content/MTY_Answers_generated_sentimient.csv\")\n","\n","df_cdmx_int = pd.read_csv(\"/content/CDMX_Answers_entrevistas_sentimient.csv\")\n","df_cdmx_gen = pd.read_csv(\"/content/CDMX_Answers_generated_sentimient.csv\")\n","\n","# Group by 'pregunta' and calculate average sentiment\n","mty_avg_sent_real = df_mty_int.groupby(\"Number\")[\"sentimiento_real\"].mean().reset_index()\n","mty_avg_sent_real.rename(columns={\"sentimiento_real\": \"avg_sentimiento_real\"}, inplace=True)\n","\n","mty_avg_sent_gen = df_mty_gen.groupby(\"Number\")[\"sentimiento_generado\"].mean().reset_index()\n","mty_avg_sent_gen.rename(columns={\"sentimiento_generado\": \"avg_sentimiento_generado\"}, inplace=True)\n","\n","cdmx_avg_sent_real = df_cdmx_int.groupby(\"Number\")[\"sentimiento_real\"].mean().reset_index()\n","cdmx_avg_sent_real.rename(columns={\"sentimiento_real\": \"avg_sentimiento_real\"}, inplace=True)\n","\n","cdmx_avg_sent_gen = df_cdmx_gen.groupby(\"Number\")[\"sentimiento_generado\"].mean().reset_index()\n","cdmx_avg_sent_gen.rename(columns={\"sentimiento_generado\": \"avg_sentimiento_generado\"}, inplace=True)\n","\n","\n","# Merge both results on the question\n","mty_merged_avg = pd.merge(mty_avg_sent_real, mty_avg_sent_gen, on=\"Number\")\n","cdmx_merged_avg = pd.merge(cdmx_avg_sent_real, cdmx_avg_sent_gen, on=\"Number\")\n","\n","# Display or export results\n","print(mty_merged_avg)\n","print(cdmx_merged_avg)\n","mty_merged_avg.to_csv(\"/content/mty_avg_sentimiento_comparado.csv\", index=False)\n","cdmx_merged_avg.to_csv(\"/content/cdmx_avg_sentimiento_comparado.csv\", index=False)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UjVK04Mm8mwK","executionInfo":{"status":"ok","timestamp":1753578539771,"user_tz":-180,"elapsed":43,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"e594a985-d415-4775-8995-82cd9be50843"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["   Number  avg_sentimiento_real  avg_sentimiento_generado\n","0     1.0             -0.164309                 -0.112690\n","1     2.0             -0.075175                 -0.158285\n","2     3.0             -0.130239                 -0.072299\n","3     4.0             -0.058371                 -0.135207\n","   Number  avg_sentimiento_real  avg_sentimiento_generado\n","0     1.0             -0.070763                 -0.118984\n","1     2.0             -0.099033                 -0.230552\n","2     3.0             -0.057069                 -0.081162\n","3     4.0             -0.089282                 -0.127978\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","\n","# Load both real and generated datasets\n","df_real = pd.read_csv(\"/content/CDMX_Answers_entrevistas_sentimient.csv\")\n","df_gen = pd.read_csv(\"/content/CDMX_Answers_generated_sentimient.csv\")\n","\n","# Add a column to indicate source\n","df_real[\"tipo\"] = \"real\"\n","df_gen[\"tipo\"] = \"generada\"\n","\n","# Standardize sentiment column names\n","df_real.rename(columns={\"sentimiento_real\": \"sentimiento\"}, inplace=True)\n","df_gen.rename(columns={\"sentimiento_generado\": \"sentimiento\"}, inplace=True)\n","\n","# Standardize answer column names (optional)\n","df_real.rename(columns={\"Answer\": \"respuesta\"}, inplace=True)\n","df_gen.rename(columns={\"Answer_generated\": \"respuesta\"}, inplace=True)\n","\n","# Select only relevant columns\n","cols = [\"Number\", \"respuesta\", \"sentimiento\", \"tipo\"]\n","df_combined = pd.concat([df_real[cols], df_gen[cols]], ignore_index=True)\n","\n","# Compute average sentiment per question and type\n","avg_by_group = df_combined.groupby([\"Number\", \"tipo\"])[\"sentimiento\"].mean().reset_index()\n","avg_by_group.rename(columns={\"sentimiento\": \"avg_sentimiento\"}, inplace=True)\n","\n","# Merge the average back to each row\n","df_final = pd.merge(df_combined, avg_by_group, on=[\"Number\", \"tipo\"], how=\"left\")\n","\n","# Save the final combined file\n","df_final.to_csv(\"/content/CDMX_Int_Sentiment_Comparation.csv\", index=False)\n"],"metadata":{"id":"x3t5hlFIGrpF","executionInfo":{"status":"ok","timestamp":1753578539796,"user_tz":-180,"elapsed":24,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","\n","# Load both real and generated datasets\n","df_real = pd.read_csv(\"/content/MTY_Answers_entrevistas_sentimient.csv\")\n","df_gen = pd.read_csv(\"/content/MTY_Answers_generated_sentimient.csv\")\n","\n","# Add a column to indicate source\n","df_real[\"tipo\"] = \"real\"\n","df_gen[\"tipo\"] = \"generada\"\n","\n","# Standardize sentiment column names\n","df_real.rename(columns={\"sentimiento_real\": \"sentimiento\"}, inplace=True)\n","df_gen.rename(columns={\"sentimiento_generado\": \"sentimiento\"}, inplace=True)\n","\n","# Standardize answer column names (optional)\n","df_real.rename(columns={\"Answer\": \"respuesta\"}, inplace=True)\n","df_gen.rename(columns={\"Answer_generated\": \"respuesta\"}, inplace=True)\n","\n","# Select only relevant columns\n","cols = [\"Number\", \"respuesta\", \"sentimiento\", \"tipo\"]\n","df_combined = pd.concat([df_real[cols], df_gen[cols]], ignore_index=True)\n","\n","# Compute average sentiment per question and type\n","avg_by_group = df_combined.groupby([\"Number\", \"tipo\"])[\"sentimiento\"].mean().reset_index()\n","avg_by_group.rename(columns={\"sentimiento\": \"avg_sentimiento\"}, inplace=True)\n","\n","# Merge the average back to each row\n","df_final = pd.merge(df_combined, avg_by_group, on=[\"Number\", \"tipo\"], how=\"left\")\n","\n","# Save the final combined file\n","df_final.to_csv(\"/content/MTY_Sentiment_Comparation.csv\", index=False)\n"],"metadata":{"id":"MV_ouQrF1zPz","executionInfo":{"status":"ok","timestamp":1753578539853,"user_tz":-180,"elapsed":47,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}}},"execution_count":8,"outputs":[]},{"cell_type":"markdown","source":["STADISTICAL TEST"],"metadata":{"id":"Ps4Sr5-DPUAQ"}},{"cell_type":"code","source":["import pandas as pd\n","from scipy.stats import ttest_rel\n","\n","# Load the CSV file\n","df = pd.read_csv('/content/CDMX_Int_Sentiment_Comparation.csv')\n","\n","# Initialize a list to collect results for each question\n","results = []\n","\n","# Loop over each unique question number\n","for q_num in sorted(df['Number'].dropna().unique()):\n","    # Filter data for the current question\n","    q_data = df[df['Number'] == q_num]\n","\n","    # Separate real and generated sentiment values\n","    real_q = q_data[q_data['tipo'] == 'real']['sentimiento'].reset_index(drop=True)\n","    gen_q = q_data[q_data['tipo'] == 'generada']['sentimiento'].reset_index(drop=True)\n","\n","    # Make sure we compare only pairs of responses\n","    min_len = min(len(real_q), len(gen_q))\n","    if min_len == 0:\n","        continue  # Skip questions that don't have both real and generated responses\n","\n","    real_q = real_q[:min_len]\n","    gen_q = gen_q[:min_len]\n","\n","    # Perform paired t-test\n","    t_stat, p_val = ttest_rel(real_q, gen_q)\n","\n","    # Save the results\n","    results.append({\n","        \"Question (Number)\": int(q_num),\n","        \"N pairs\": min_len,\n","        \"Mean Real\": real_q.mean(),\n","        \"Mean Generated\": gen_q.mean(),\n","        \"Mean Difference\": gen_q.mean() - real_q.mean(),\n","        \"t-statistic\": t_stat,\n","        \"p-value\": p_val,\n","        \"Significant (p < 0.05)\": p_val < 0.05\n","    })\n","\n","# Convert the list of results to a DataFrame\n","results_df = pd.DataFrame(results)\n","\n","# Display the result\n","results_df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":192},"id":"Z_vs_c_7TAtt","executionInfo":{"status":"ok","timestamp":1753578539930,"user_tz":-180,"elapsed":75,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"737866c9-0009-4556-97bd-99a99692ed6b"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Question (Number)  N pairs  Mean Real  Mean Generated  Mean Difference  \\\n","0                  1        4  -0.070763       -0.115397        -0.044633   \n","1                  2        4  -0.099033       -0.346343        -0.247310   \n","2                  3        4  -0.057069       -0.086258        -0.029189   \n","3                  4        4  -0.089282       -0.110439        -0.021157   \n","\n","   t-statistic   p-value  Significant (p < 0.05)  \n","0     2.820731  0.066698                   False  \n","1     4.169098  0.025118                    True  \n","2     0.540252  0.626552                   False  \n","3     0.731543  0.517411                   False  "],"text/html":["\n","  <div id=\"df-fcb50c30-d75c-4158-a4e2-34c32ecb8349\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Question (Number)</th>\n","      <th>N pairs</th>\n","      <th>Mean Real</th>\n","      <th>Mean Generated</th>\n","      <th>Mean Difference</th>\n","      <th>t-statistic</th>\n","      <th>p-value</th>\n","      <th>Significant (p &lt; 0.05)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>-0.070763</td>\n","      <td>-0.115397</td>\n","      <td>-0.044633</td>\n","      <td>2.820731</td>\n","      <td>0.066698</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>-0.099033</td>\n","      <td>-0.346343</td>\n","      <td>-0.247310</td>\n","      <td>4.169098</td>\n","      <td>0.025118</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>-0.057069</td>\n","      <td>-0.086258</td>\n","      <td>-0.029189</td>\n","      <td>0.540252</td>\n","      <td>0.626552</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>-0.089282</td>\n","      <td>-0.110439</td>\n","      <td>-0.021157</td>\n","      <td>0.731543</td>\n","      <td>0.517411</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fcb50c30-d75c-4158-a4e2-34c32ecb8349')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fcb50c30-d75c-4158-a4e2-34c32ecb8349 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fcb50c30-d75c-4158-a4e2-34c32ecb8349');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-b653421a-61c8-4882-986f-df147b6fd6a6\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b653421a-61c8-4882-986f-df147b6fd6a6')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-b653421a-61c8-4882-986f-df147b6fd6a6 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_68781275-3a4e-4987-88c2-d6929ef01684\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('results_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_68781275-3a4e-4987-88c2-d6929ef01684 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('results_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"results_df","summary":"{\n  \"name\": \"results_df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Question (Number)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 4,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          4,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"N pairs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 4,\n        \"max\": 4,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Real\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.018760259593953922,\n        \"min\": -0.09903311543166632,\n        \"max\": -0.057069106027483926,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -0.09903311543166632\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Generated\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1218226737271461,\n        \"min\": -0.34634281,\n        \"max\": -0.08625781725,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -0.34634281\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Difference\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1082641333710905,\n        \"min\": -0.24730969456833368,\n        \"max\": -0.021157369013910354,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -0.24730969456833368\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"t-statistic\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.741773255856908,\n        \"min\": 0.5402517853879726,\n        \"max\": 4.169097859201467,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          4.169097859201467\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"p-value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3074485324249448,\n        \"min\": 0.02511808693261173,\n        \"max\": 0.626552366901803,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.02511808693261173\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Significant (p < 0.05)\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["from scipy.stats import wilcoxon\n","\n","# Initialize a list to collect Wilcoxon results\n","wilcoxon_results = []\n","\n","# Loop over each unique question number\n","for q_num in sorted(df['Number'].dropna().unique()):\n","    # Filter data for the current question\n","    q_data = df[df['Number'] == q_num]\n","\n","    # Separate real and generated sentiment values\n","    real_q = q_data[q_data['tipo'] == 'real']['sentimiento'].reset_index(drop=True)\n","    gen_q = q_data[q_data['tipo'] == 'generada']['sentimiento'].reset_index(drop=True)\n","\n","    # Match the length for paired comparison\n","    min_len = min(len(real_q), len(gen_q))\n","    if min_len == 0:\n","        continue  # Skip questions with missing pairs\n","\n","    real_q = real_q[:min_len]\n","    gen_q = gen_q[:min_len]\n","\n","    # Perform Wilcoxon signed-rank test\n","    try:\n","        stat, p_val = wilcoxon(real_q, gen_q)\n","    except ValueError:\n","        # If all differences are zero or the sample is too small, skip\n","        continue\n","\n","    # Store the result\n","    wilcoxon_results.append({\n","        \"Question (Number)\": int(q_num),\n","        \"N pairs\": min_len,\n","        \"Mean Real\": real_q.mean(),\n","        \"Mean Generated\": gen_q.mean(),\n","        \"Mean Difference\": gen_q.mean() - real_q.mean(),\n","        \"Wilcoxon statistic\": stat,\n","        \"p-value\": p_val,\n","        \"Significant (p < 0.05)\": p_val < 0.05\n","    })\n","\n","# Convert to DataFrame\n","wilcoxon_df = pd.DataFrame(wilcoxon_results)\n","\n","# Display the result\n","wilcoxon_df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":192},"id":"80bZ9xmhYKnP","executionInfo":{"status":"ok","timestamp":1753578539973,"user_tz":-180,"elapsed":45,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"10a8f056-d74b-4700-80e2-df3eda663706"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Question (Number)  N pairs  Mean Real  Mean Generated  Mean Difference  \\\n","0                  1        4  -0.070763       -0.115397        -0.044633   \n","1                  2        4  -0.099033       -0.346343        -0.247310   \n","2                  3        4  -0.057069       -0.086258        -0.029189   \n","3                  4        4  -0.089282       -0.110439        -0.021157   \n","\n","   Wilcoxon statistic  p-value  Significant (p < 0.05)  \n","0                 1.0    0.250                   False  \n","1                 0.0    0.125                   False  \n","2                 3.0    0.625                   False  \n","3                 3.0    0.625                   False  "],"text/html":["\n","  <div id=\"df-b099b24b-4f7e-4f6a-83d0-99fdf4332f97\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Question (Number)</th>\n","      <th>N pairs</th>\n","      <th>Mean Real</th>\n","      <th>Mean Generated</th>\n","      <th>Mean Difference</th>\n","      <th>Wilcoxon statistic</th>\n","      <th>p-value</th>\n","      <th>Significant (p &lt; 0.05)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>-0.070763</td>\n","      <td>-0.115397</td>\n","      <td>-0.044633</td>\n","      <td>1.0</td>\n","      <td>0.250</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>-0.099033</td>\n","      <td>-0.346343</td>\n","      <td>-0.247310</td>\n","      <td>0.0</td>\n","      <td>0.125</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>-0.057069</td>\n","      <td>-0.086258</td>\n","      <td>-0.029189</td>\n","      <td>3.0</td>\n","      <td>0.625</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>-0.089282</td>\n","      <td>-0.110439</td>\n","      <td>-0.021157</td>\n","      <td>3.0</td>\n","      <td>0.625</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b099b24b-4f7e-4f6a-83d0-99fdf4332f97')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b099b24b-4f7e-4f6a-83d0-99fdf4332f97 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b099b24b-4f7e-4f6a-83d0-99fdf4332f97');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-e773c952-ee5b-45ae-a460-4c1bab6f5801\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e773c952-ee5b-45ae-a460-4c1bab6f5801')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-e773c952-ee5b-45ae-a460-4c1bab6f5801 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_3ceb810a-41f0-4702-909c-937f8fa3bc35\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('wilcoxon_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_3ceb810a-41f0-4702-909c-937f8fa3bc35 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('wilcoxon_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"wilcoxon_df","summary":"{\n  \"name\": \"wilcoxon_df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Question (Number)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 4,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          4,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"N pairs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 4,\n        \"max\": 4,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Real\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.018760259593953922,\n        \"min\": -0.09903311543166632,\n        \"max\": -0.057069106027483926,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -0.09903311543166632\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Generated\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1218226737271461,\n        \"min\": -0.34634281,\n        \"max\": -0.08625781725,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -0.34634281\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Difference\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1082641333710905,\n        \"min\": -0.24730969456833368,\n        \"max\": -0.021157369013910354,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -0.24730969456833368\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Wilcoxon statistic\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.5,\n        \"min\": 0.0,\n        \"max\": 3.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"p-value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2576941016011038,\n        \"min\": 0.125,\n        \"max\": 0.625,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Significant (p < 0.05)\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["from scipy.stats import ks_2samp\n","\n","# Initialize a list to collect KS test results\n","ks_results = []\n","\n","# Loop through each unique question\n","for q_num in sorted(df['Number'].dropna().unique()):\n","    # Filter data for the current question\n","    q_data = df[df['Number'] == q_num]\n","\n","    # Separate sentiment values\n","    real_q = q_data[q_data['tipo'] == 'real']['sentimiento'].reset_index(drop=True)\n","    gen_q = q_data[q_data['tipo'] == 'generada']['sentimiento'].reset_index(drop=True)\n","\n","    # Perform K-S test only if both have values\n","    if len(real_q) > 0 and len(gen_q) > 0:\n","        ks_stat, p_val = ks_2samp(real_q, gen_q)\n","        ks_results.append({\n","            \"Question (Number)\": int(q_num),\n","            \"N Real\": len(real_q),\n","            \"N Generated\": len(gen_q),\n","            \"Mean Real\": real_q.mean(),\n","            \"Mean Generated\": gen_q.mean(),\n","            \"K-S statistic\": ks_stat,\n","            \"p-value\": p_val,\n","            \"Significant (p < 0.05)\": p_val < 0.05\n","        })\n","\n","# Convert results to DataFrame\n","ks_df = pd.DataFrame(ks_results)\n","\n","# Display the table\n","ks_df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":192},"id":"ZIeqaBwSZGHe","executionInfo":{"status":"ok","timestamp":1753578540024,"user_tz":-180,"elapsed":52,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"43a9190a-4072-4bc0-a2a3-1366343a50e7"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Question (Number)  N Real  N Generated  Mean Real  Mean Generated  \\\n","0                  1       4           20  -0.070763       -0.118984   \n","1                  2       4           20  -0.099033       -0.230552   \n","2                  3       4           20  -0.057069       -0.081162   \n","3                  4       4           20  -0.089282       -0.127978   \n","\n","   K-S statistic   p-value  Significant (p < 0.05)  \n","0           0.65  0.086580                   False  \n","1           0.65  0.086580                   False  \n","2           0.45  0.447770                   False  \n","3           0.35  0.749482                   False  "],"text/html":["\n","  <div id=\"df-6862685e-9429-4619-bdbf-73d443222635\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Question (Number)</th>\n","      <th>N Real</th>\n","      <th>N Generated</th>\n","      <th>Mean Real</th>\n","      <th>Mean Generated</th>\n","      <th>K-S statistic</th>\n","      <th>p-value</th>\n","      <th>Significant (p &lt; 0.05)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>20</td>\n","      <td>-0.070763</td>\n","      <td>-0.118984</td>\n","      <td>0.65</td>\n","      <td>0.086580</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>20</td>\n","      <td>-0.099033</td>\n","      <td>-0.230552</td>\n","      <td>0.65</td>\n","      <td>0.086580</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>20</td>\n","      <td>-0.057069</td>\n","      <td>-0.081162</td>\n","      <td>0.45</td>\n","      <td>0.447770</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>20</td>\n","      <td>-0.089282</td>\n","      <td>-0.127978</td>\n","      <td>0.35</td>\n","      <td>0.749482</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6862685e-9429-4619-bdbf-73d443222635')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6862685e-9429-4619-bdbf-73d443222635 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6862685e-9429-4619-bdbf-73d443222635');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-9dd1634e-1044-4db1-9822-76d0e15944ca\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9dd1634e-1044-4db1-9822-76d0e15944ca')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-9dd1634e-1044-4db1-9822-76d0e15944ca button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_66f254a6-1ba1-4430-b5cb-d2bee5ec217b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('ks_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_66f254a6-1ba1-4430-b5cb-d2bee5ec217b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('ks_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"ks_df","summary":"{\n  \"name\": \"ks_df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Question (Number)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 4,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          4,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"N Real\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 4,\n        \"max\": 4,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"N Generated\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 20,\n        \"max\": 20,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Real\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.018760259593953922,\n        \"min\": -0.09903311543166632,\n        \"max\": -0.057069106027483926,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -0.09903311543166632\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Generated\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06389388360185083,\n        \"min\": -0.23055170075749998,\n        \"max\": -0.08116200654999998,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -0.23055170075749998\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"K-S statistic\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.15000000000000002,\n        \"min\": 0.35,\n        \"max\": 0.65,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.65\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"p-value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3202636050716019,\n        \"min\": 0.08658008658008659,\n        \"max\": 0.7494824016563149,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.08658008658008659\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Significant (p < 0.05)\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","# Set style for consistency\n","sns.set(style=\"whitegrid\")\n","\n","# Load the data (assuming df is already loaded and processed)\n","# df = pd.read_csv('/content/CDMX_Int_Sentiment_Comparation.csv') # Assuming this was done earlier\n","\n","# Get unique question numbers\n","question_numbers = sorted(df['Number'].dropna().unique())\n","\n","# Create a figure and a set of subplots\n","fig, axes = plt.subplots(2, 2, figsize=(12, 10))\n","axes = axes.flatten() # Flatten the 2x2 array of axes for easy iteration\n","\n","# Loop through each question and plot on a different subplot\n","for i, q_num in enumerate(question_numbers):\n","    q_data = df[df['Number'] == q_num].copy()\n","\n","    if q_data['tipo'].nunique() < 2:\n","        continue\n","\n","    # Rename labels for clarity\n","    q_data['tipo'] = q_data['tipo'].replace({'real': 'Dataset', 'generada': 'Model'})\n","\n","    # Boxplot\n","    ax = sns.boxplot(\n","        data=q_data,\n","        x='tipo',\n","        y='sentimiento',\n","        order=['Model', 'Dataset'],\n","        palette='pastel',\n","        linewidth=2.5,\n","        ax=axes[i] # Specify the subplot to draw on\n","    )\n","\n","    # Stripplot\n","    sns.stripplot(\n","        data=q_data,\n","        x='tipo',\n","        y='sentimiento',\n","        order=['Model', 'Dataset'],\n","        color='black',\n","        alpha=0.4,\n","        ax=axes[i] # Specify the subplot to draw on\n","    )\n","\n","    # Calculate and add average sentiment text to the side\n","    avg_sentiment_model = q_data[q_data['tipo'] == 'Model']['sentimiento'].mean()\n","    avg_sentiment_dataset = q_data[q_data['tipo'] == 'Dataset']['sentimiento'].mean()\n","\n","    # Adjust y-coordinate based on the y-axis limits\n","    y_lim = ax.get_ylim()\n","    y_offset = (y_lim[1] - y_lim[0]) * 0.05 # 5% of the y-axis range as offset\n","\n","    ax.text(0, y_lim[1] - y_offset, f'Model Avg: {avg_sentiment_model:.2f}',\n","            horizontalalignment='center', size='small', color='black', weight='semibold')\n","    ax.text(1, y_lim[1] - y_offset, f'Dataset Avg: {avg_sentiment_dataset:.2f}',\n","            horizontalalignment='center', size='small', color='black', weight='semibold')\n","\n","    axes[i].set_title(f'CDMX: Sentiment Distribution - Question {int(q_num)}')\n","    axes[i].set_xlabel('Response Type')\n","    axes[i].set_ylabel('Sentiment Score')\n","    axes[i].grid(True)\n","\n","# Adjust layout to prevent overlapping titles and labels\n","plt.tight_layout()\n","\n","# Show the combined plot\n","plt.show()"],"metadata":{"id":"3WAqsp3jeeX0","executionInfo":{"status":"ok","timestamp":1753578541203,"user_tz":-180,"elapsed":1177,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"b2e324aa-5936-47a6-a167-26de257c88d8","colab":{"base_uri":"https://localhost:8080/","height":973}},"execution_count":12,"outputs":[{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-12-1570855158.py:28: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  ax = sns.boxplot(\n","/tmp/ipython-input-12-1570855158.py:28: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  ax = sns.boxplot(\n","/tmp/ipython-input-12-1570855158.py:28: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  ax = sns.boxplot(\n","/tmp/ipython-input-12-1570855158.py:28: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  ax = sns.boxplot(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x1000 with 4 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["MTY:"],"metadata":{"id":"G5-WA_da5vuf"}},{"cell_type":"code","source":["import pandas as pd\n","from scipy.stats import ttest_rel\n","\n","# Load the CSV file\n","df = pd.read_csv('/content/MTY_Sentiment_Comparation.csv')\n","\n","# Initialize a list to collect results for each question\n","results = []\n","\n","# Loop over each unique question number\n","for q_num in sorted(df['Number'].dropna().unique()):\n","    # Filter data for the current question\n","    q_data = df[df['Number'] == q_num]\n","\n","    # Separate real and generated sentiment values\n","    real_q = q_data[q_data['tipo'] == 'real']['sentimiento'].reset_index(drop=True)\n","    gen_q = q_data[q_data['tipo'] == 'generada']['sentimiento'].reset_index(drop=True)\n","\n","    # Make sure we compare only pairs of responses\n","    min_len = min(len(real_q), len(gen_q))\n","    if min_len == 0:\n","        continue  # Skip questions that don't have both real and generated responses\n","\n","    real_q = real_q[:min_len]\n","    gen_q = gen_q[:min_len]\n","\n","    # Perform paired t-test\n","    t_stat, p_val = ttest_rel(real_q, gen_q)\n","\n","    # Save the results\n","    results.append({\n","        \"Question (Number)\": int(q_num),\n","        \"N pairs\": min_len,\n","        \"Mean Real\": real_q.mean(),\n","        \"Mean Generated\": gen_q.mean(),\n","        \"Mean Difference\": gen_q.mean() - real_q.mean(),\n","        \"t-statistic\": t_stat,\n","        \"p-value\": p_val,\n","        \"Significant (p < 0.05)\": p_val < 0.05\n","    })\n","\n","# Convert the list of results to a DataFrame\n","results_df = pd.DataFrame(results)\n","\n","# Display the result\n","results_df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":192},"executionInfo":{"status":"ok","timestamp":1753578541225,"user_tz":-180,"elapsed":21,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"3f5e0d5d-7795-427b-e7b6-09e1782e27a4","id":"Zi6tZd6d1eol"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Question (Number)  N pairs  Mean Real  Mean Generated  Mean Difference  \\\n","0                  1        4  -0.164309       -0.091830         0.072479   \n","1                  2        4  -0.075175       -0.152666        -0.077491   \n","2                  3        4  -0.130239       -0.105476         0.024763   \n","3                  4        4  -0.058371       -0.129777        -0.071406   \n","\n","   t-statistic   p-value  Significant (p < 0.05)  \n","0    -0.600297  0.590627                   False  \n","1     5.980657  0.009357                    True  \n","2    -0.117748  0.913708                   False  \n","3     1.739600  0.180309                   False  "],"text/html":["\n","  <div id=\"df-7e416a9a-414a-486f-957a-eaec9be500be\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Question (Number)</th>\n","      <th>N pairs</th>\n","      <th>Mean Real</th>\n","      <th>Mean Generated</th>\n","      <th>Mean Difference</th>\n","      <th>t-statistic</th>\n","      <th>p-value</th>\n","      <th>Significant (p &lt; 0.05)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>-0.164309</td>\n","      <td>-0.091830</td>\n","      <td>0.072479</td>\n","      <td>-0.600297</td>\n","      <td>0.590627</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>-0.075175</td>\n","      <td>-0.152666</td>\n","      <td>-0.077491</td>\n","      <td>5.980657</td>\n","      <td>0.009357</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>-0.130239</td>\n","      <td>-0.105476</td>\n","      <td>0.024763</td>\n","      <td>-0.117748</td>\n","      <td>0.913708</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>-0.058371</td>\n","      <td>-0.129777</td>\n","      <td>-0.071406</td>\n","      <td>1.739600</td>\n","      <td>0.180309</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7e416a9a-414a-486f-957a-eaec9be500be')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7e416a9a-414a-486f-957a-eaec9be500be button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7e416a9a-414a-486f-957a-eaec9be500be');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-fed53cb6-764b-40b9-8ab9-fb8141079933\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fed53cb6-764b-40b9-8ab9-fb8141079933')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-fed53cb6-764b-40b9-8ab9-fb8141079933 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_8cb0aef8-d0d1-4ac2-a2d7-12786b585d60\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('results_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_8cb0aef8-d0d1-4ac2-a2d7-12786b585d60 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('results_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"results_df","summary":"{\n  \"name\": \"results_df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Question (Number)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 4,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          4,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"N pairs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 4,\n        \"max\": 4,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Real\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04899662290625787,\n        \"min\": -0.16430901363492006,\n        \"max\": -0.05837057717144485,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -0.07517519220709798\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Generated\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.026877213692678953,\n        \"min\": -0.15266626249999998,\n        \"max\": -0.09182984250000001,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -0.15266626249999998\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Difference\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07371807930510628,\n        \"min\": -0.077491070292902,\n        \"max\": 0.07247917113492006,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -0.077491070292902\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"t-statistic\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.995048520859807,\n        \"min\": -0.6002972729320112,\n        \"max\": 5.980657083285238,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          5.980657083285238\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"p-value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4077955697875919,\n        \"min\": 0.009357354657237785,\n        \"max\": 0.913708263436233,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.009357354657237785\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Significant (p < 0.05)\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["from scipy.stats import wilcoxon\n","\n","# Initialize a list to collect Wilcoxon results\n","wilcoxon_results = []\n","\n","# Loop over each unique question number\n","for q_num in sorted(df['Number'].dropna().unique()):\n","    # Filter data for the current question\n","    q_data = df[df['Number'] == q_num]\n","\n","    # Separate real and generated sentiment values\n","    real_q = q_data[q_data['tipo'] == 'real']['sentimiento'].reset_index(drop=True)\n","    gen_q = q_data[q_data['tipo'] == 'generada']['sentimiento'].reset_index(drop=True)\n","\n","    # Match the length for paired comparison\n","    min_len = min(len(real_q), len(gen_q))\n","    if min_len == 0:\n","        continue  # Skip questions with missing pairs\n","\n","    real_q = real_q[:min_len]\n","    gen_q = gen_q[:min_len]\n","\n","    # Perform Wilcoxon signed-rank test\n","    try:\n","        stat, p_val = wilcoxon(real_q, gen_q)\n","    except ValueError:\n","        # If all differences are zero or the sample is too small, skip\n","        continue\n","\n","    # Store the result\n","    wilcoxon_results.append({\n","        \"Question (Number)\": int(q_num),\n","        \"N pairs\": min_len,\n","        \"Mean Real\": real_q.mean(),\n","        \"Mean Generated\": gen_q.mean(),\n","        \"Mean Difference\": gen_q.mean() - real_q.mean(),\n","        \"Wilcoxon statistic\": stat,\n","        \"p-value\": p_val,\n","        \"Significant (p < 0.05)\": p_val < 0.05\n","    })\n","\n","# Convert to DataFrame\n","wilcoxon_df = pd.DataFrame(wilcoxon_results)\n","\n","# Display the result\n","wilcoxon_df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":192},"executionInfo":{"status":"ok","timestamp":1753578541251,"user_tz":-180,"elapsed":24,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"d7cd9f74-d73b-40c4-ae68-f6822e1e84be","id":"QAcJNZ5W1eoo"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Question (Number)  N pairs  Mean Real  Mean Generated  Mean Difference  \\\n","0                  1        4  -0.164309       -0.091830         0.072479   \n","1                  2        4  -0.075175       -0.152666        -0.077491   \n","2                  3        4  -0.130239       -0.105476         0.024763   \n","3                  4        4  -0.058371       -0.129777        -0.071406   \n","\n","   Wilcoxon statistic  p-value  Significant (p < 0.05)  \n","0                 5.0    1.000                   False  \n","1                 0.0    0.125                   False  \n","2                 4.0    0.875                   False  \n","3                 1.0    0.250                   False  "],"text/html":["\n","  <div id=\"df-640c086a-e359-4b2b-92a5-49ed90b7306b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Question (Number)</th>\n","      <th>N pairs</th>\n","      <th>Mean Real</th>\n","      <th>Mean Generated</th>\n","      <th>Mean Difference</th>\n","      <th>Wilcoxon statistic</th>\n","      <th>p-value</th>\n","      <th>Significant (p &lt; 0.05)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>-0.164309</td>\n","      <td>-0.091830</td>\n","      <td>0.072479</td>\n","      <td>5.0</td>\n","      <td>1.000</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>-0.075175</td>\n","      <td>-0.152666</td>\n","      <td>-0.077491</td>\n","      <td>0.0</td>\n","      <td>0.125</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>-0.130239</td>\n","      <td>-0.105476</td>\n","      <td>0.024763</td>\n","      <td>4.0</td>\n","      <td>0.875</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>-0.058371</td>\n","      <td>-0.129777</td>\n","      <td>-0.071406</td>\n","      <td>1.0</td>\n","      <td>0.250</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-640c086a-e359-4b2b-92a5-49ed90b7306b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-640c086a-e359-4b2b-92a5-49ed90b7306b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-640c086a-e359-4b2b-92a5-49ed90b7306b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-99718137-3a21-4177-9733-d08ce8cb91a9\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-99718137-3a21-4177-9733-d08ce8cb91a9')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-99718137-3a21-4177-9733-d08ce8cb91a9 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_3319dc16-19cf-4e74-9c98-04828ec72bf4\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('wilcoxon_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_3319dc16-19cf-4e74-9c98-04828ec72bf4 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('wilcoxon_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"wilcoxon_df","summary":"{\n  \"name\": \"wilcoxon_df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Question (Number)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 4,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          4,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"N pairs\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 4,\n        \"max\": 4,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Real\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04899662290625787,\n        \"min\": -0.16430901363492006,\n        \"max\": -0.05837057717144485,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -0.07517519220709798\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Generated\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.026877213692678953,\n        \"min\": -0.15266626249999998,\n        \"max\": -0.09182984250000001,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -0.15266626249999998\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Difference\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.07371807930510628,\n        \"min\": -0.077491070292902,\n        \"max\": 0.07247917113492006,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -0.077491070292902\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Wilcoxon statistic\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.3804761428476167,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"p-value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4389855730355308,\n        \"min\": 0.125,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.125\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Significant (p < 0.05)\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["from scipy.stats import ks_2samp\n","\n","# Initialize a list to collect KS test results\n","ks_results = []\n","\n","# Loop through each unique question\n","for q_num in sorted(df['Number'].dropna().unique()):\n","    # Filter data for the current question\n","    q_data = df[df['Number'] == q_num]\n","\n","    # Separate sentiment values\n","    real_q = q_data[q_data['tipo'] == 'real']['sentimiento'].reset_index(drop=True)\n","    gen_q = q_data[q_data['tipo'] == 'generada']['sentimiento'].reset_index(drop=True)\n","\n","    # Perform K-S test only if both have values\n","    if len(real_q) > 0 and len(gen_q) > 0:\n","        ks_stat, p_val = ks_2samp(real_q, gen_q)\n","        ks_results.append({\n","            \"Question (Number)\": int(q_num),\n","            \"N Real\": len(real_q),\n","            \"N Generated\": len(gen_q),\n","            \"Mean Real\": real_q.mean(),\n","            \"Mean Generated\": gen_q.mean(),\n","            \"K-S statistic\": ks_stat,\n","            \"p-value\": p_val,\n","            \"Significant (p < 0.05)\": p_val < 0.05\n","        })\n","\n","# Convert results to DataFrame\n","ks_df = pd.DataFrame(ks_results)\n","\n","# Display the table\n","ks_df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":192},"executionInfo":{"status":"ok","timestamp":1753578541322,"user_tz":-180,"elapsed":69,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"a4d988bb-9313-43f6-bc19-ea8453aefbce","id":"8GSli61w1eoo"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Question (Number)  N Real  N Generated  Mean Real  Mean Generated  \\\n","0                  1       4           20  -0.164309       -0.112690   \n","1                  2       4           20  -0.075175       -0.158285   \n","2                  3       4           20  -0.130239       -0.072299   \n","3                  4       4           20  -0.058371       -0.135207   \n","\n","   K-S statistic   p-value  Significant (p < 0.05)  \n","0           0.55  0.207039                   False  \n","1           0.80  0.013175                    True  \n","2           0.35  0.749482                   False  \n","3           0.65  0.086580                   False  "],"text/html":["\n","  <div id=\"df-47934a98-490f-48c9-b8eb-9772059d8a08\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Question (Number)</th>\n","      <th>N Real</th>\n","      <th>N Generated</th>\n","      <th>Mean Real</th>\n","      <th>Mean Generated</th>\n","      <th>K-S statistic</th>\n","      <th>p-value</th>\n","      <th>Significant (p &lt; 0.05)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>20</td>\n","      <td>-0.164309</td>\n","      <td>-0.112690</td>\n","      <td>0.55</td>\n","      <td>0.207039</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>20</td>\n","      <td>-0.075175</td>\n","      <td>-0.158285</td>\n","      <td>0.80</td>\n","      <td>0.013175</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>20</td>\n","      <td>-0.130239</td>\n","      <td>-0.072299</td>\n","      <td>0.35</td>\n","      <td>0.749482</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>20</td>\n","      <td>-0.058371</td>\n","      <td>-0.135207</td>\n","      <td>0.65</td>\n","      <td>0.086580</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-47934a98-490f-48c9-b8eb-9772059d8a08')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-47934a98-490f-48c9-b8eb-9772059d8a08 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-47934a98-490f-48c9-b8eb-9772059d8a08');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-02c0fcd5-4e86-425a-9f93-b18952dcbbdd\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-02c0fcd5-4e86-425a-9f93-b18952dcbbdd')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-02c0fcd5-4e86-425a-9f93-b18952dcbbdd button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_eda68f23-69b5-4157-bb4e-7639ffcc256b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('ks_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_eda68f23-69b5-4157-bb4e-7639ffcc256b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('ks_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"ks_df","summary":"{\n  \"name\": \"ks_df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Question (Number)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 4,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2,\n          4,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"N Real\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 4,\n        \"max\": 4,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"N Generated\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 20,\n        \"max\": 20,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Real\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.04899662290625787,\n        \"min\": -0.16430901363492006,\n        \"max\": -0.05837057717144485,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -0.07517519220709798\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mean Generated\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.036629843547190004,\n        \"min\": -0.15828525815,\n        \"max\": -0.07229941305000001,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -0.15828525815\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"K-S statistic\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.18874586088176878,\n        \"min\": 0.35,\n        \"max\": 0.8,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"p-value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.33333094207939246,\n        \"min\": 0.013175230566534912,\n        \"max\": 0.7494824016563149,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.013175230566534912\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Significant (p < 0.05)\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","# Set style for consistency\n","sns.set(style=\"whitegrid\")\n","\n","# Assuming df for MTY data is already loaded and processed (from cell Zi6tZd6d1eol)\n","\n","# Get unique question numbers\n","question_numbers = sorted(df['Number'].dropna().unique())\n","\n","# Create a figure and a set of subplots\n","fig, axes = plt.subplots(2, 2, figsize=(12, 10))\n","axes = axes.flatten() # Flatten the 2x2 array of axes for easy iteration\n","\n","# Loop through each question and plot on a different subplot\n","for i, q_num in enumerate(question_numbers):\n","    q_data = df[df['Number'] == q_num].copy()\n","\n","    if q_data['tipo'].nunique() < 2:\n","        continue\n","\n","    # Rename labels for clarity\n","    q_data['tipo'] = q_data['tipo'].replace({'real': 'Dataset', 'generada': 'Model'})\n","\n","    # Boxplot\n","    ax = sns.boxplot(\n","        data=q_data,\n","        x='tipo',\n","        y='sentimiento',\n","        order=['Model', 'Dataset'],\n","        palette='pastel',\n","        linewidth=2.5,\n","        ax=axes[i] # Specify the subplot to draw on\n","    )\n","\n","    # Stripplot\n","    sns.stripplot(\n","        data=q_data,\n","        x='tipo',\n","        y='sentimiento',\n","        order=['Model', 'Dataset'],\n","        color='black',\n","        alpha=0.4,\n","        ax=axes[i] # Specify the subplot to draw on\n","    )\n","\n","    # Calculate and add average sentiment text to the side\n","    avg_sentiment_model = q_data[q_data['tipo'] == 'Model']['sentimiento'].mean()\n","    avg_sentiment_dataset = q_data[q_data['tipo'] == 'Dataset']['sentimiento'].mean()\n","\n","    # Adjust y-coordinate based on the y-axis limits\n","    y_lim = ax.get_ylim()\n","    y_offset = (y_lim[1] - y_lim[0]) * 0.05 # 5% of the y-axis range as offset\n","\n","    ax.text(0, y_lim[1] - y_offset, f'Model Avg: {avg_sentiment_model:.2f}',\n","            horizontalalignment='center', size='small', color='black', weight='semibold')\n","    ax.text(1, y_lim[1] - y_offset, f'Dataset Avg: {avg_sentiment_dataset:.2f}',\n","            horizontalalignment='center', size='small', color='black', weight='semibold')\n","\n","    axes[i].set_title(f'MTY: Sentiment Distribution - Question {int(q_num)}')\n","    axes[i].set_xlabel('Response Type')\n","    axes[i].set_ylabel('Sentiment Score')\n","    axes[i].grid(True)\n","\n","# Adjust layout to prevent overlapping titles and labels\n","plt.tight_layout()\n","\n","# Show the combined plot\n","plt.show()"],"metadata":{"executionInfo":{"status":"ok","timestamp":1753578541986,"user_tz":-180,"elapsed":662,"user":{"displayName":"Joaquin Garcia Luna Perez","userId":"01168812787878955692"}},"outputId":"6654c711-1740-437a-a632-df63f3834db2","colab":{"base_uri":"https://localhost:8080/","height":973},"id":"9duxHjF-1eop"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stderr","text":["/tmp/ipython-input-16-2465138464.py:27: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  ax = sns.boxplot(\n","/tmp/ipython-input-16-2465138464.py:27: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  ax = sns.boxplot(\n","/tmp/ipython-input-16-2465138464.py:27: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  ax = sns.boxplot(\n","/tmp/ipython-input-16-2465138464.py:27: FutureWarning: \n","\n","Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n","\n","  ax = sns.boxplot(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x1000 with 4 Axes>"],"image/png":"\n"},"metadata":{}}]}]}